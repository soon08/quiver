{
  "title": "静态文件服务",
  "cells": [
    {
      "type": "text",
      "data": "<p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">本文是我对V5Node项目的总结，该项目的特性包括：</p><ol style=\"margin: 10px 0px 10px 10px; padding: 0px 0px 0px 20px; border: 0px; width: 549px; clear: left; color: rgb(0, 0, 0); font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-size: 14px; font-variant-ligatures: normal; line-height: 25.2px; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><li style=\"margin: 4px 0px; padding: 0px 0px 0px 10px; border: none; float: none; clear: none; text-align: left;\">项目大多数的文件都是属于静态文件，只有数据部分存在动态请求。</li><li style=\"margin: 4px 0px; padding: 0px 0px 0px 10px; border: none; float: none; clear: none; text-align: left;\">数据部分的请求都呈现为RESTful的特性。</li></ol><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">所以项目主要包含两个部分就是静态服务器和RESTful服务器。本文讲的是静态文件服务器部分。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">既是一个新的项目，那么创建v5node目录是应该的。既是一个Node应用，创建一个app.js文件也是应该的。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">我们的app.js文件里的结构很明确：</p><pre style=\"margin-top: 10px; margin-bottom: 10px; padding: 10px 10px 10px 5px; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', monospace; color: rgb(49, 78, 100); line-height: 21px; width: 597.797px; overflow: auto; clear: none; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(245, 242, 240); float: none !important; background-position: -29px 0px;\">var PORT = 8000;\nvar http = require('http');\nvar server = http.createServer(function (request, response) {\n    // TODO\n});\nserver.listen(PORT);\nconsole.log(\"Server runing at port: \" + PORT + \".\");\n</pre><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">因为当前要实现的功能是静态文件服务器，那么以Apache为例，让我们回忆一下静态文件服务器都有哪些功能。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">浏览器发送URL，服务端解析URL，对应到硬盘上的文件。如果文件存在，返回200状态码，并发送文件到浏览器端；如果文件不存在，返回404状态码，发送一个404的文件到浏览器端。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">以下两图是Apache经典的两种状态。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">现在需求已经明了，那么我们开始实现吧。</p><h2 style=\"margin: 0px 0px 10px; padding: 0px; font-size: 20px; font-weight: normal; border: 0px; float: none; clear: none; width: 610px; color: rgb(34, 34, 34); line-height: 24px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><span style=\"margin: 0px; border: 0px; padding: 0px; font-weight: 600;\">实现路由</span></h2><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">路由部分的实现在《The Node Beginner Book》已经被描述过，此处不例外。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">添加url模块是必要的，然后解析pathname。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">以下是实现代码：</p><pre style=\"margin-top: 10px; margin-bottom: 10px; padding: 10px 10px 10px 5px; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', monospace; color: rgb(49, 78, 100); line-height: 21px; width: 597.797px; overflow: auto; clear: none; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(245, 242, 240); float: none !important; background-position: -29px 0px;\">var server = http.createServer(function (request, response) {\n    var pathname = url.parse(request.url).pathname;\n    response.write(pathname);\n    response.end();\n});</pre><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">现在的代码是向浏览器端输出请求的路径，类似一个echo服务器。接下来我们为其添加输出对应文件的功能。</p><h2 style=\"margin: 0px 0px 10px; padding: 0px; font-size: 20px; font-weight: normal; border: 0px; float: none; clear: none; width: 610px; color: rgb(34, 34, 34); line-height: 24px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><span style=\"margin: 0px; border: 0px; padding: 0px; font-weight: 600;\">读取静态文件</span></h2><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">为了不让用户在浏览器端通过请求/app.js查看到我们的代码，我们设定用户只能请求assets目录下的文件。服务器会将路径信息映射到assets目录。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">涉及到了文件读取的这部分，自然不能避开fs(file system)这个模块。同样，涉及到了路径处理，path模块也是需要的。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">我们通过path模块的path.exists方法来判断静态文件是否存在磁盘上。不存在我们直接响应给客户端404错误。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">如果文件存在则调用fs.readFile方法读取文件。如果发生错误，我们响应给客户端500错误，表明存在内部错误。正常状态下则发送读取到的文件给客户端，表明200状态。</p><pre style=\"margin-top: 10px; margin-bottom: 10px; padding: 10px 10px 10px 5px; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', monospace; color: rgb(49, 78, 100); line-height: 21px; width: 597.797px; overflow: auto; clear: none; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(245, 242, 240); float: none !important; background-position: -29px 0px;\">var server = http.createServer(function (request, response) {\n    var pathname = url.parse(request.url).pathname;\n    var realPath = \"assets\" + pathname;\n    path.exists(realPath, function (exists) {\n        if (!exists) {\n            response.writeHead(404, {\n                'Content-Type': 'text/plain'\n            });\n\n            response.write(\"This request URL \" + pathname + \" was not found on this server.\");\n            response.end();\n        } else {\n            fs.readFile(realPath, \"binary\", function (err, file) {\n                if (err) {\n                    response.writeHead(500, {\n                        'Content-Type': 'text/plain'\n                    });\n\n                    response.end(err);\n                } else {\n                    response.writeHead(200, {\n                        'Content-Type': 'text/html'\n                    });\n\n                    response.write(file, \"binary\");\n\n                    response.end();\n                }\n            });\n        }\n    });\n});</pre><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">以上这段简单的代码加上一个assets目录，就构成了我们最基本的静态文件服务器。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">那么眼尖的你且看看，这个最基本的静态文件服务器存在哪些问题呢？答案是MIME类型支持。因为我们的服务器同时要存放html, css, js, png, gif, jpg等等文件。并非每一种文件的MIME类型都是text/html的。</p><h2 style=\"margin: 0px 0px 10px; padding: 0px; font-size: 20px; font-weight: normal; border: 0px; float: none; clear: none; width: 610px; color: rgb(34, 34, 34); line-height: 24px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">MIME类型支持</h2><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">像其他服务器一样，支持MIME的话，就得一张映射表。</p><pre style=\"margin-top: 10px; margin-bottom: 10px; padding: 10px 10px 10px 5px; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', monospace; color: rgb(49, 78, 100); line-height: 21px; width: 597.797px; overflow: auto; clear: none; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(245, 242, 240); float: none !important; background-position: -29px 0px;\">exports.types = {\n    \"css\": \"text/css\",\n    \"gif\": \"image/gif\",\n    \"html\": \"text/html\",\n    \"ico\": \"image/x-icon\",\n    \"jpeg\": \"image/jpeg\",\n    \"jpg\": \"image/jpeg\",\n    \"js\": \"text/javascript\",\n    \"json\": \"application/json\",\n    \"pdf\": \"application/pdf\",\n    \"png\": \"image/png\",\n    \"svg\": \"image/svg+xml\",\n    \"swf\": \"application/x-shockwave-flash\",\n    \"tiff\": \"image/tiff\",\n    \"txt\": \"text/plain\",\n    \"wav\": \"audio/x-wav\",\n    \"wma\": \"audio/x-ms-wma\",\n    \"wmv\": \"video/x-ms-wmv\",\n    \"xml\": \"text/xml\"\n};</pre><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">以上代码另存在mime.js文件中。该文件仅仅只列举了一些常用的MIME类型，以文件后缀作为key，MIME类型为value。那么引入mime.js文件吧。</p><pre style=\"margin-top: 10px; margin-bottom: 10px; padding: 10px 10px 10px 5px; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', monospace; color: rgb(49, 78, 100); line-height: 21px; width: 597.797px; overflow: auto; clear: none; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(245, 242, 240); float: none !important; background-position: -29px 0px;\">var mime = require(\"./mime\").types;</pre><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">我们通过path.extname来获取文件的后缀名。由于extname返回值包含”.”，所以通过slice方法来剔除掉”.”，对于没有后缀名的文件，我们一律认为是unknown。</p><pre style=\"margin-top: 10px; margin-bottom: 10px; padding: 10px 10px 10px 5px; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', monospace; color: rgb(49, 78, 100); line-height: 21px; width: 597.797px; overflow: auto; clear: none; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(245, 242, 240); float: none !important; background-position: -29px 0px;\">var ext = path.extname(realPath);\next = ext ? ext.slice(1) : 'unknown';</pre><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">接下来我们很容易得到真正的MIME类型了。</p><pre style=\"margin-top: 10px; margin-bottom: 10px; padding: 10px 10px 10px 5px; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', monospace; color: rgb(49, 78, 100); line-height: 21px; width: 597.797px; overflow: auto; clear: none; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(245, 242, 240); float: none !important; background-position: -29px 0px;\">var contentType = mime[ext] || \"text/plain\";\nresponse.writeHead(200, {'Content-Type': contentType});\nresponse.write(file, \"binary\");\nresponse.end();</pre><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">对于未知的类型，我们一律返回text/plain类型。</p><h2 style=\"margin: 0px 0px 10px; padding: 0px; font-size: 20px; font-weight: normal; border: 0px; float: none; clear: none; width: 610px; color: rgb(34, 34, 34); line-height: 24px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><span style=\"margin: 0px; border: 0px; padding: 0px; font-weight: 600;\">缓存支持/</span><span style=\"margin: 0px; border: 0px; padding: 0px; font-weight: 600;\">控制</span></h2><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">在MIME支持之后，静态文件服务器看起来已经很完美了。任何静态文件只要丢进assets目录之后就可以万事大吉不管了。看起来已经达到了Apache作为静态文件服务器的相同效果了。我们实现这样的服务器用的代码只有这么多行而已。是不是很简单呢？</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">但是，我们发现用户在每次请求的时候，服务器每次都要调用fs.readFile方法去读取硬盘上的文件的。当服务器的请求量一上涨，硬盘IO会吃不消。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">在解决这个问题之前，我们有必要了解一番前端浏览器缓存的一些机制和提高性能的方案。</p><ol style=\"margin: 10px 0px 10px 10px; padding: 0px 0px 0px 20px; border: 0px; width: 549px; clear: left; color: rgb(0, 0, 0); font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-size: 14px; font-variant-ligatures: normal; line-height: 25.2px; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><li style=\"margin: 4px 0px; padding: 0px 0px 0px 10px; border: none; float: none; clear: none; text-align: left;\">GZip压缩文件可以减少响应的大小，能够达到节省带宽的目的。</li><li style=\"margin: 4px 0px; padding: 0px 0px 0px 10px; border: none; float: none; clear: none; text-align: left;\">浏览器缓存中存有文件副本的时候，不能确定有效的时候，会生成一个条件get请求。<ol type=\"a\" style=\"margin: 10px 0px 10px 10px; padding: 0px 0px 0px 20px; border: 0px; width: 485.094px; list-style-type: decimal; clear: left;\"><li style=\"margin: 4px 0px; padding: 0px 0px 0px 10px; border: none; float: none; clear: none; text-align: left;\">在请求的头中会包含 If-Modified-Since。</li><li style=\"margin: 4px 0px; padding: 0px 0px 0px 10px; border: none; float: none; clear: none; text-align: left;\">如果服务器端文件在这个时间后发生过修改，则发送整个文件给前端。</li><li style=\"margin: 4px 0px; padding: 0px 0px 0px 10px; border: none; float: none; clear: none; text-align: left;\">如果没有修改，则返回304状态码。并不发送整个文件给前端。</li><li style=\"margin: 4px 0px; padding: 0px 0px 0px 10px; border: none; float: none; clear: none; text-align: left;\">另外一种判断机制是ETag。在此并不讨论。</li></ol></li><li style=\"margin: 4px 0px; padding: 0px 0px 0px 10px; border: none; float: none; clear: none; text-align: left;\">如果副本有效，这个get请求都会省掉。判断有效的最主要的方法是服务端响应的时候带上Expires的头。<ol type=\"a\" style=\"margin: 10px 0px 10px 10px; padding: 0px 0px 0px 20px; border: 0px; width: 485.094px; list-style-type: decimal; clear: left;\"><li style=\"margin: 4px 0px; padding: 0px 0px 0px 10px; border: none; float: none; clear: none; text-align: left;\">浏览器会判断Expires头，直到制定的日期过期，才会发起新的请求。</li><li style=\"margin: 4px 0px; padding: 0px 0px 0px 10px; border: none; float: none; clear: none; text-align: left;\">另一个可以达到相同目的的方法是返回Cache-Control: max-age=xxxx。</li></ol></li></ol><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">欲了解更多缓存机制，请参见Steve Sounders著作的《高性能网站建设指南》。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">为了简化问题，我们只做如下这几件事情：</p><ol style=\"margin: 10px 0px 10px 10px; padding: 0px 0px 0px 20px; border: 0px; width: 549px; clear: left; color: rgb(0, 0, 0); font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-size: 14px; font-variant-ligatures: normal; line-height: 25.2px; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><li style=\"margin: 4px 0px; padding: 0px 0px 0px 10px; border: none; float: none; clear: none; text-align: left;\">为指定几种后缀的文件，在响应时添加Expires头和Cache-Control: max-age头。超时日期设置为1年。</li><li style=\"margin: 4px 0px; padding: 0px 0px 0px 10px; border: none; float: none; clear: none; text-align: left;\">由于这是静态文件服务器，为所有请求，响应时返回Last-Modified头。</li><li style=\"margin: 4px 0px; padding: 0px 0px 0px 10px; border: none; float: none; clear: none; text-align: left;\">为带If-Modified-Since的请求头，做日期检查，如果没有修改，则返回304。若修改，则返回文件。</li></ol><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">对于以上的静态文件服务器，Node给的响应头是十分简单的：</p><pre style=\"margin-top: 10px; margin-bottom: 10px; padding: 10px 10px 10px 5px; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', monospace; color: rgb(49, 78, 100); line-height: 21px; width: 597.797px; overflow: auto; clear: none; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(245, 242, 240); float: none !important; background-position: -29px 0px;\">Connection: keep-alive\nContent-Type: text/html\nTransfer-Encoding: chunked</pre><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">对于指定后缀文件和过期日期，为了保证可配置。那么建立一个config.js文件是应该的。</p><pre style=\"margin-top: 10px; margin-bottom: 10px; padding: 10px 10px 10px 5px; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', monospace; color: rgb(49, 78, 100); line-height: 21px; width: 597.797px; overflow: auto; clear: none; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(245, 242, 240); float: none !important; background-position: -29px 0px;\">exports.Expires = {\n    fileMatch: /^(gif|png|jpg|js|css)$/ig,\n    maxAge: 60 * 60 * 24 * 365\n};\n</pre><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">引入config.js文件。</p><pre style=\"margin-top: 10px; margin-bottom: 10px; padding: 10px 10px 10px 5px; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', monospace; color: rgb(49, 78, 100); line-height: 21px; width: 597.797px; overflow: auto; clear: none; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(245, 242, 240); float: none !important; background-position: -29px 0px;\">var config = require(\"./config\");</pre><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">我们在相应之前判断后缀名是否符合我们要添加过期时间头的条件。</p><pre style=\"margin-top: 10px; margin-bottom: 10px; padding: 10px 10px 10px 5px; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', monospace; color: rgb(49, 78, 100); line-height: 21px; width: 597.797px; overflow: auto; clear: none; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(245, 242, 240); float: none !important; background-position: -29px 0px;\">var ext = path.extname(realPath);\next = ext ? ext.slice(1) : 'unknown';\nif (ext.match(config.Expires.fileMatch)) {\n    var expires = new Date();\n    expires.setTime(expires.getTime() + config.Expires.maxAge * 1000);\n    response.setHeader(\"Expires\", expires.toUTCString());\n    response.setHeader(\"Cache-Control\", \"max-age=\" + config.Expires.maxAge);\n}\n</pre><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">这次的响应头中多了两个header。</p><pre style=\"margin-top: 10px; margin-bottom: 10px; padding: 10px 10px 10px 5px; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', monospace; color: rgb(49, 78, 100); line-height: 21px; width: 597.797px; overflow: auto; clear: none; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(245, 242, 240); float: none !important; background-position: -29px 0px;\">Cache-Control: max-age=31536000\nConnection: keep-alive\nContent-Type: image/png\nExpires: Fri, 09 Nov 2012 12:55:41 GMT\nTransfer-Encoding: chunked</pre><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">浏览器在发送请求之前由于检测到Cache-Control和Expires（Cache-Control的优先级高于Expires，但有的浏览器不支持Cache-Control，这时采用Expires），如果没有过期，则不会发送请求，而直接从缓存中读取文件。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">接下来我们为所有请求的响应都添加Last-Modified头。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">读取文件的最后修改时间是通过fs模块的fs.stat()方法来实现的。关于stat的详细介绍请参见<u style=\"margin: 0px; border: 0px; padding: 0px;\"><a href=\"http://www.cnitblog.com/guopingleee/archive/2008/11/13/51411.aspx\" style=\"text-decoration: none; color: rgb(40, 106, 178); outline: none !important; margin: 0px; border: 0px; padding: 0px;\">此处</a></u>。</p><pre style=\"margin-top: 10px; margin-bottom: 10px; padding: 10px 10px 10px 5px; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', monospace; color: rgb(49, 78, 100); line-height: 21px; width: 597.797px; overflow: auto; clear: none; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(245, 242, 240); float: none !important; background-position: -29px 0px;\">fs.stat(realPath, function (err, stat) {\n    var lastModified = stat.mtime.toUTCString();\n    response.setHeader(\"Last-Modified\", lastModified);\n});</pre><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">我们同时也要检测浏览器是否发送了If-Modified-Since请求头。如果发送而且跟文件的修改时间相同的话，我们返回304状态。</p><pre style=\"margin-top: 10px; margin-bottom: 10px; padding: 10px 10px 10px 5px; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', monospace; color: rgb(49, 78, 100); line-height: 21px; width: 597.797px; overflow: auto; clear: none; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(245, 242, 240); float: none !important; background-position: -29px 0px;\">if (request.headers[ifModifiedSince] &amp;&amp; lastModified == request.headers[ifModifiedSince]) {\n    response.writeHead(304, \"Not Modified\");\n    response.end();\n}</pre><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">如果没有发送或者跟磁盘上的文件修改时间不相符合，则发送回磁盘上的最新文件。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">通过Expires和Last-Modified两个方案以及与浏览器之间的通力合作，会节省相当大的一部分网络流量，同时也会降低部分硬盘IO的请求。如果在这之前还存在CDN的话，整个方案就比较完美了。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">由于Expires和Max-Age都是由浏览器来进行判断的，如果判断成功，http请求都不会发送到服务端的，这里只能通过fiddler和浏览器配合进行测试。但是Last-Modified却是可以通过curl来进行测试的。</p><pre style=\"margin-top: 10px; margin-bottom: 10px; padding: 10px 10px 10px 5px; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', monospace; color: rgb(49, 78, 100); line-height: 21px; width: 597.797px; overflow: auto; clear: none; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(245, 242, 240); float: none !important; background-position: -29px 0px;\">#:~$ curl --header \"If-Modified-Since: Fri, 11 Nov 2011 19:14:51 GMT\" -i http://localhost:8000\nHTTP/1.1 304 Not Modified\nContent-Type: text/html\nLast-Modified: Fri, 11 Nov 2011 19:14:51 GMT\nConnection: keep-alive</pre><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">注意，我们看到这个304请求的响应是不带body信息的。所以，达到我们节省带宽的需求。只需几行代码，就可以省下许多的带宽费用。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">但是，貌似我们有提到gzip这样的东西。对于CSS、JS等文件如果不采用GZip的话，还是会浪费掉部分网络带宽。那么接下来把GZip代码添加进来。</p><h3 style=\"margin: 0px 0px 10px; padding: 0px; font-size: 18px; font-weight: normal; border: 0px; float: none; clear: none; width: 610px; color: rgb(34, 34, 34); line-height: 36px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><span style=\"margin: 0px; border: 0px; padding: 0px; font-weight: 600;\">GZip</span><span style=\"margin: 0px; border: 0px; padding: 0px; font-weight: 600;\">启用</span></h3><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">如果你是前端达人，你应该是知道YUI Compressor或Google Closure Complier这样的压缩工具的。在这基础上，再进行gzip压缩，则会减少很多的网络流量。那么，我们看看Node中，怎么把gzip搞起来。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">要用到gzip，就需要zlib模块，该模块在Node的0.5.8版本开始原生支持。</p><pre style=\"margin-top: 10px; margin-bottom: 10px; padding: 10px 10px 10px 5px; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', monospace; color: rgb(49, 78, 100); line-height: 21px; width: 597.797px; overflow: auto; clear: none; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(245, 242, 240); float: none !important; background-position: -29px 0px;\">var zlib = require(\"zlib\");</pre><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">对于图片一类的文件，不需要进行gzip压缩，所以我们在config.js中配置一个启用压缩的列表。</p><pre style=\"margin-top: 10px; margin-bottom: 10px; padding: 10px 10px 10px 5px; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', monospace; color: rgb(49, 78, 100); line-height: 21px; width: 597.797px; overflow: auto; clear: none; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(245, 242, 240); float: none !important; background-position: -29px 0px;\">exports.Compress = {\n    match: /css|js|html/ig\n};</pre><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">这里为了防止大文件，也为了满足zlib模块的调用模式，将读取文件改为流的形式进行读取。</p><pre style=\"margin-top: 10px; margin-bottom: 10px; padding: 10px 10px 10px 5px; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', monospace; color: rgb(49, 78, 100); line-height: 21px; width: 597.797px; overflow: auto; clear: none; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(245, 242, 240); float: none !important; background-position: -29px 0px;\">var raw = fs.createReadStream(realPath);\nvar acceptEncoding = request.headers['accept-encoding'] || \"\";\nvar matched = ext.match(config.Compress.match);\nif (matched &amp;&amp; acceptEncoding.match(/\\bgzip\\b/)) {\n    response.writeHead(200, \"Ok\", {\n        'Content-Encoding': 'gzip'\n    });\n    raw.pipe(zlib.createGzip()).pipe(response);\n} else if (matched &amp;&amp; acceptEncoding.match(/\\bdeflate\\b/)) {\n    response.writeHead(200, \"Ok\", {\n        'Content-Encoding': 'deflate'\n    });\n    raw.pipe(zlib.createDeflate()).pipe(response);\n} else {\n    response.writeHead(200, \"Ok\");\n    raw.pipe(response);\n}</pre><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">对于支持压缩的文件格式以及浏览器端接受gzip或deflate压缩，我们调用压缩。若不，则管道方式转发给response。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">启用压缩其实就这么简单。如果你有fiddler的话，可以监听一下请求，会看到被压缩的请求。</p><h2 style=\"margin: 0px 0px 10px; padding: 0px; font-size: 20px; font-weight: normal; border: 0px; float: none; clear: none; width: 610px; color: rgb(34, 34, 34); line-height: 24px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><span style=\"margin: 0px; border: 0px; padding: 0px; font-weight: 600;\">安全问题</span></h2><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">我们搞了一大堆的事情，但是安全方面也不能少。想想哪一个地方是最容易出问题的？</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">我们发现上面的这段代码写得还是有点纠结的，通常这样纠结的代码我是不愿意拿出去让人看见的。但是，假如一个同学用浏览器访问http://localhost:8000/../app.js 怎么办捏？</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">不用太害怕，浏览器会自动干掉那两个作为父路径的点的。浏览器会把这个路径组装成http://localhost:8000/app.js的，这个文件在assets目录下不存在，返回404 Not Found。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">但是聪明一点的同学会通过curl -i http://localhost:8000/../app.js 来访问。于是，问题出现了。</p><pre style=\"margin-top: 10px; margin-bottom: 10px; padding: 10px 10px 10px 5px; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', monospace; color: rgb(49, 78, 100); line-height: 21px; width: 597.797px; overflow: auto; clear: none; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(245, 242, 240); float: none !important; background-position: -29px 0px;\"># curl -i http://localhost:8000/../app.js\nHTTP/1.1 200 Ok\nContent-Type: text/javascript\nLast-Modified: Thu, 10 Nov 2011 17:16:51 GMT\nExpires: Sat, 10 Nov 2012 04:59:27 GMT\nCache-Control: max-age=31536000\nConnection: keep-alive\nTransfer-Encoding: chunked\nvar PORT = 8000;\nvar http = require(\"http\");\nvar url = require(\"url\");\nvar fs = require(\"fs\");\nvar path = require(\"path\");\nvar mime = require(\"./mime\").types;</pre><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">那么怎么办呢？暴力点的解决方案就是禁止父路径。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">首先替换掉所有的..，然后调用path.normalize方法来处理掉不正常的/。</p><pre style=\"margin-top: 10px; margin-bottom: 10px; padding: 10px 10px 10px 5px; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', monospace; color: rgb(49, 78, 100); line-height: 21px; width: 597.797px; overflow: auto; clear: none; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(245, 242, 240); float: none !important; background-position: -29px 0px;\">var realPath = path.join(\"assets\", path.normalize(pathname.replace(/\\.\\./g, \"\")));</pre><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">于是这个时候通过curl -i http://localhost:8000/../app.js 访问，/../app.js会被替换掉为//app.js。normalize方法会将//app.js返回为/app.js。再加上真实的assets，就被实际映射为assets/app.js。这个文件不存在，于是返回404。搞定父路径问题。与浏览器的行为保持一致。</p><h2 style=\"margin: 0px 0px 10px; padding: 0px; font-size: 20px; font-weight: normal; border: 0px; float: none; clear: none; width: 610px; color: rgb(34, 34, 34); line-height: 24px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><span style=\"margin: 0px; border: 0px; padding: 0px; font-weight: 600;\">Welcome</span><span style=\"margin: 0px; border: 0px; padding: 0px; font-weight: 600;\">页的锦上添花</span></h2><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">再来回忆一下Apache的常见行为。当进入一个目录路径的时候，会去寻找index.html页面，如果index.html文件不存在，则返回目录索引。目录索引这里我们暂不考虑，如果用户请求的路径是/结尾的，我们就自动为其添加上index.html文件。如果这个文件不存在，继续返回404错误。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">如果用户请求了一个目录路径，而且没有带上/。那么我们为其添加上/index.html，再重新做解析。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">那么不喜欢硬编码的你，肯定是要把这个文件配置进config.js。这样你就可以选择各种后缀作为welcome页面。</p><pre style=\"margin-top: 10px; margin-bottom: 10px; padding: 10px 10px 10px 5px; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', monospace; color: rgb(49, 78, 100); line-height: 21px; width: 597.797px; overflow: auto; clear: none; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(245, 242, 240); float: none !important; background-position: -29px 0px;\">exports.Welcome = {\n    file: \"index.html\"\n};</pre><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">那么第一步，为/结尾的请求，自动添加上”index.html”。</p><pre style=\"margin-top: 10px; margin-bottom: 10px; padding: 10px 10px 10px 5px; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', monospace; color: rgb(49, 78, 100); line-height: 21px; width: 597.797px; overflow: auto; clear: none; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(245, 242, 240); float: none !important; background-position: -29px 0px;\">if (pathname.slice(-1) === \"/\") {\n    pathname = pathname + config.Welcome.file;\n}</pre><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">第二步，如果请求了一个目录路径，并且没有以/结尾。那么我们需要做判断。如果当前读取的路径是目录，就需要添加上/和index.html</p><pre style=\"margin-top: 10px; margin-bottom: 10px; padding: 10px 10px 10px 5px; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', monospace; color: rgb(49, 78, 100); line-height: 21px; width: 597.797px; overflow: auto; clear: none; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(245, 242, 240); float: none !important; background-position: -29px 0px;\">if (stats.isDirectory()) {\n    realPath = path.join(realPath, \"/\", config.Welcome.file);\n}</pre><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">由于我们目前的结构发生了一点点变化。所以需要重构一下函数。而且，fs.stat方法具有比fs.exsits方法更多的功能。我们直接替代掉它。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">就这样。一个各方面都比较完整的静态文件服务器就这样打造完毕。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><span style=\"margin: 0px; border: 0px; padding: 0px; font-weight: 600;\">Range</span><span style=\"margin: 0px; border: 0px; padding: 0px; font-weight: 600;\">支持，搞定媒体断点支持</span></p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">关于http1.1中的Range定义，可以参见这两篇文章：</p><ul style=\"margin: 0px 0px 15px 10px; padding: 0px; list-style-position: initial; list-style-image: initial; border: 0px; clear: left; color: rgb(0, 0, 0); font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-size: 14px; font-variant-ligatures: normal; line-height: 25.2px; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><li style=\"margin: 0px 0px 0px 15px; padding: 0px; border: 0px; float: none; clear: none;\"><u style=\"margin: 0px; border: 0px; padding: 0px;\"><a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html\" style=\"text-decoration: none; color: rgb(40, 106, 178); outline: none !important; margin: 0px; border: 0px; padding: 0px;\">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html</a></u></li><li style=\"margin: 0px 0px 0px 15px; padding: 0px; border: 0px; float: none; clear: none;\"><u style=\"margin: 0px; border: 0px; padding: 0px;\"><a href=\"http://labs.apache.org/webarch/http/draft-fielding-http/p5-range.html\" style=\"text-decoration: none; color: rgb(40, 106, 178); outline: none !important; margin: 0px; border: 0px; padding: 0px;\">http://labs.apache.org/webarch/http/draft-fielding-http/p5-range.html</a></u></li></ul><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">接下来，我将简单地介绍一下range的作用和其定义。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">当用户在听一首歌的时候，如果听到一半（网络下载了一半），网络断掉了，用户需要继续听的时候，文件服务器不支持断点的话，则用户需要重新下载这个文件。而Range支持的话，客户端应该记录了之前已经读取的文件范围，网络恢复之后，则向服务器发送读取剩余Range的请求，服务端只需要发送客户端请求的那部分内容，而不用整个文件发送回客户端，以此节省网络带宽。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">那么HTTP1.1规范的Range是怎样一个约定呢。</p><ol style=\"margin: 10px 0px 10px 10px; padding: 0px 0px 0px 20px; border: 0px; width: 549px; clear: left; color: rgb(0, 0, 0); font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-size: 14px; font-variant-ligatures: normal; line-height: 25.2px; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><li style=\"margin: 4px 0px; padding: 0px 0px 0px 10px; border: none; float: none; clear: none; text-align: left;\">如果Server支持Range，首先就要告诉客户端，咱支持Range，之后客户端才可能发起带Range的请求。</li><pre style=\"margin-top: 10px; margin-bottom: 10px; padding: 10px 10px 10px 5px; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', monospace; color: rgb(49, 78, 100); line-height: 21px; width: 538.016px; overflow: auto; clear: none; background-color: rgb(245, 242, 240); float: none !important; background-position: -29px 0px;\">response.setHeader('Accept-Ranges', 'bytes');</pre><li style=\"margin: 4px 0px; padding: 0px 0px 0px 10px; border: none; float: none; clear: none; text-align: left;\">Server通过请求头中的Range: bytes=0-xxx来判断是否是做Range请求，如果这个值存在而且有效，则只发回请求的那部分文件内容，响应的状态码变成206，表示Partial Content，并设置Content-Range。如果无效，则返回416状态码，表明Request Range Not Satisfiable（<u style=\"margin: 0px; border: 0px; padding: 0px;\"><a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.17\" style=\"text-decoration: none; color: rgb(40, 106, 178); outline: none !important; margin: 0px; border: 0px; padding: 0px;\">http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.17</a></u>&nbsp;）。如果不包含Range的请求头，则继续通过常规的方式响应。</li><li style=\"margin: 4px 0px; padding: 0px 0px 0px 10px; border: none; float: none; clear: none; text-align: left;\">有必要对Range请求做一下解释。</li><pre style=\"margin-top: 10px; margin-bottom: 10px; padding: 10px 10px 10px 5px; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', monospace; color: rgb(49, 78, 100); line-height: 21px; width: 538.016px; overflow: auto; clear: none; background-color: rgb(245, 242, 240); float: none !important; background-position: -29px 0px;\">ranges-specifier = byte-ranges-specifier\nbyte-ranges-specifier = bytes-unit \"=\" byte-range-set\nbyte-range-set = 1#( byte-range-spec | suffix-byte-range-spec )\nbyte-range-spec = first-byte-pos \"-\" [last-byte-pos]\nfirst-byte-pos = 1*DIGIT\nlast-byte-pos = 1*DIGIT</pre></ol><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">上面这段定义来自w3定义的协议<u style=\"margin: 0px; border: 0px; padding: 0px;\"><a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35\" style=\"text-decoration: none; color: rgb(40, 106, 178); outline: none !important; margin: 0px; border: 0px; padding: 0px;\">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35</a></u>。大致可以表述为Range: bytes=[start]-[end][,[start]-[end]]。简言之有以下几种情况：</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">bytes=0-99，从0到99之间的数据字节。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">bytes=-100，文件的最后100个字节。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">bytes=100-，第100个字节开始之后的所有字节。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">bytes=0-99,200-299，从0到99之间的数据字节和200到299之间的数据字节。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">那么，我们就开始实现吧。首先判断Range请求和检测其是否有效。为了保持代码干净，我们封装一个parseRange方法，这个方法属于util性质的，那么我们放进utils.js文件。</p><pre style=\"margin-top: 10px; margin-bottom: 10px; padding: 10px 10px 10px 5px; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', monospace; color: rgb(49, 78, 100); line-height: 21px; width: 597.797px; overflow: auto; clear: none; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(245, 242, 240); float: none !important; background-position: -29px 0px;\">var utils = require(\"./utils\");</pre><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">我们暂且不支持多区间。于是遇见逗号，就报416错误。</p><pre style=\"margin-top: 10px; margin-bottom: 10px; padding: 10px 10px 10px 5px; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', monospace; color: rgb(49, 78, 100); line-height: 21px; width: 597.797px; overflow: auto; clear: none; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(245, 242, 240); float: none !important; background-position: -29px 0px;\">exports.parseRange = function (str, size) {\n    if (str.indexOf(\",\") != -1) {\n        return;\n    }\n    var range = str.split(\"-\"),\n        start = parseInt(range[0], 10),\n        end = parseInt(range[1], 10);\n    // Case: -100\n    if (isNaN(start)) {\n        start = size - end;\n        end = size - 1;\n        // Case: 100-\n    } else if (isNaN(end)) {\n        end = size - 1;\n    }\n    // Invalid\n    if (isNaN(start) || isNaN(end) || start &gt; end || end &gt; size) {\n        return;\n    }\n    return {\n        start: start,\n        end: end\n    };\n};</pre><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">如果满足Range的条件，则为响应添加上Content-Range和修改掉Content-Lenth。</p><pre style=\"margin-top: 10px; margin-bottom: 10px; padding: 10px 10px 10px 5px; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', monospace; color: rgb(49, 78, 100); line-height: 21px; width: 597.797px; overflow: auto; clear: none; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(245, 242, 240); float: none !important; background-position: -29px 0px;\">response.setHeader(\"Content-Range\", \"bytes \" + range.start + \"-\" + range.end + \"/\" + stats.size);\nresponse.setHeader(\"Content-Length\", (range.end - range.start + 1));</pre><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">非常开心的一件事情是，Node的读文件流，原生支持range读取。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">var raw = fs.createReadStream(realPath, {\"start\": range.start, \"end\": range.end});</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">设置状态码为206。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">由于选取Range之后，依然还是需要经过GZip的。于是代码已经有点面条的味道了。重构一下吧。于是代码大致如此：</p><pre style=\"margin-top: 10px; margin-bottom: 10px; padding: 10px 10px 10px 5px; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', monospace; color: rgb(49, 78, 100); line-height: 21px; width: 597.797px; overflow: auto; clear: none; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(245, 242, 240); float: none !important; background-position: -29px 0px;\">var compressHandle = function (raw, statusCode, reasonPhrase) {\n    var stream = raw;\n    var acceptEncoding = request.headers['accept-encoding'] || \"\";\n    var matched = ext.match(config.Compress.match);\n    if (matched &amp;&amp; acceptEncoding.match(/\\bgzip\\b/)) {\n        response.setHeader(\"Content-Encoding\", \"gzip\");\n        stream = raw.pipe(zlib.createGzip());\n    } else if (matched &amp;&amp; acceptEncoding.match(/\\bdeflate\\b/)) {\n        response.setHeader(\"Content-Encoding\", \"deflate\");\n        stream = raw.pipe(zlib.createDeflate());\n    }\n    response.writeHead(statusCode, reasonPhrase);\n    stream.pipe(response);\n};\nif (request.headers[\"range\"]) {\n    var range = utils.parseRange(request.headers[\"range\"], stats.size);\n    if (range) {\n        response.setHeader(\"Content-Range\", \"bytes \" + range.start + \"-\" + range.end + \"/\" + stats.size);\n        response.setHeader(\"Content-Length\", (range.end - range.start + 1));\n        var raw = fs.createReadStream(realPath, {\n            \"start\": range.start,\n            \"end\": range.end\n        });\n        compressHandle(raw, 206, \"Partial Content\");\n    } else {\n        response.removeHeader(\"Content-Length\");\n        response.writeHead(416, \"Request Range Not Satisfiable\");\n        response.end();\n    }\n} else {\n    var raw = fs.createReadStream(realPath);\n    compressHandle(raw, 200, \"Ok\");\n}</pre><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">通过curl --header \"Range:0-20\" -i http://localhost:8000/index.html请求测试一番试试。</p><pre style=\"margin-top: 10px; margin-bottom: 10px; padding: 10px 10px 10px 5px; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', monospace; color: rgb(49, 78, 100); line-height: 21px; width: 597.797px; overflow: auto; clear: none; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(245, 242, 240); float: none !important; background-position: -29px 0px;\">HTTP/1.1 206 Partial Content\nServer: Node/V5\nAccept-Ranges: bytes\nContent-Type: text/html\nContent-Length: 21\nLast-Modified: Fri, 11 Nov 2011 19:14:51 GMT\nContent-Range: bytes 0-20/54\nConnection: keep-alive\n&lt;html&gt;\n&lt;body&gt;\n&lt;h1&gt;I</pre><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">index.html文件并没有被整个发送给客户端。这里之所以没有完全的21个字节，是因为\\t和\\r都各算一个字节。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">再用curl --header \"Range:0-100\" -i http://localhost:8000/index.html反向测试一下吧。</p><pre style=\"margin-top: 10px; margin-bottom: 10px; padding: 10px 10px 10px 5px; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', monospace; color: rgb(49, 78, 100); line-height: 21px; width: 597.797px; overflow: auto; clear: none; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(245, 242, 240); float: none !important; background-position: -29px 0px;\">HTTP/1.1 416 Request Range Not Satisfiable\nServer: Node/V5\nAccept-Ranges: bytes\nContent-Type: text/html\nLast-Modified: Fri, 11 Nov 2011 19:14:51 GMT\nConnection: keep-alive\nTransfer-Encoding: chunked</pre><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">嗯，要的就是这个效果。至此，Range支持完成，这个静态文件服务器支持一些流媒体文件。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 25.2px; color: rgb(0, 0, 0); clear: both; width: 610px; font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">嗯。就这么简单。</p>"
    }
  ]
}