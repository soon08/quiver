{
  "title": "builtin",
  "cells": [
    {
      "type": "text",
      "data": "<b>make &nbsp;: &nbsp;make slices / channel / maps</b>"
    },
    {
      "type": "code",
      "language": "golang",
      "data": "//channel\nvar exit = make(chan int)\nvar users = make(chan string, 10)\n\n//map\nvar userScore = make(map[string]float64)\n\n//slice\nvar scores = make([]int, 100)\nvar users = make([]string, 10, 100)"
    },
    {
      "type": "text",
      "data": "<b>new</b>"
    },
    {
      "type": "code",
      "language": "golang",
      "data": "package main\n\nimport \"log\"\n\ntype User struct {\n  UserName string\n  Gender bool\n}\n\nfunc main() {\n  var user *User = new(User)\n}"
    },
    {
      "type": "text",
      "data": "<b>delete</b>"
    },
    {
      "type": "code",
      "language": "golang",
      "data": "var userScore = make(map[string]float64)\n\nuserScore[\"synder\"] = 100\nuserScore[\"sam\"] = 90\n\ndelete(userScore, \"synder\")"
    },
    {
      "type": "text",
      "data": "<b>close</b>"
    },
    {
      "type": "code",
      "language": "golang",
      "data": "//write only channel  chan<- int\n//read only channel   <-chan int"
    },
    {
      "type": "text",
      "data": "<b>append</b>"
    },
    {
      "type": "code",
      "language": "golang",
      "data": "var users = make([]string, 100)\nvar temps = []string{\"green\", \"wiki\", \"kimi\"}\n\nusers = append(users, \"sam\", \"synder\")\nusers = append(users, temps...)"
    },
    {
      "type": "text",
      "data": "<b>copy</b>"
    },
    {
      "type": "code",
      "language": "golang",
      "data": "var src = []int{1,2,4}\nvar des = []int{5,6,7}\n\ncopied = copy(des, src)"
    },
    {
      "type": "text",
      "data": "<b>len &amp; cap</b>"
    },
    {
      "type": "code",
      "language": "golang",
      "data": "var slice = []int{1,23,19}\nprintln(len(slice))\nprintln(cap(slice))\n\nvar userscore = make(map[string]float64)\nuserscore[\"synder\"] = 10\nprintln(len(userscore))\n\nvar channel = make(chan int, 5)\nchannel <- 10\nprintln(len(channel))\nprintln(cap(channel))\n\nvar pointer *[5]byte\nprintln(len(pointer))\nprintln(cap(pointer))"
    },
    {
      "type": "text",
      "data": "<b>real &amp; imag</b>"
    },
    {
      "type": "code",
      "language": "golang",
      "data": "var c1 = 1.5 + 0.5i\nvar c2 = complex(1.5, 0.5)\n\nprintln(real(c1))\nprintln(imag(c2))"
    },
    {
      "type": "text",
      "data": "<h4 cid=\"c7\" mdtype=\"heading\" class=\"md-end-block md-heading md-focus\" style=\"line-height: 1.4; box-sizing: border-box; font-size: 1.25em; position: relative; margin-top: 1rem; margin-bottom: 1rem; cursor: text; width: inherit; font-family: 'Open Sans', 'Clear Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif; white-space: pre-wrap; background-color: rgb(255, 255, 255);\"><span md-inline=\"plain\" class=\"md-expand\" style=\"box-sizing: border-box;\">声明和创建一个channel</span></h4><blockquote cid=\"c8\" mdtype=\"blockquote\" style=\"margin-top: 0.8em; margin-bottom: 0.8em; box-sizing: border-box; font-family: 'Open Sans', 'Clear Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 16px; white-space: pre-wrap; background-color: rgb(255, 255, 255);\"><p cid=\"c9\" mdtype=\"paragraph\" style=\"box-sizing: border-box; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; margin: 0px 0px 0.8em; width: inherit; position: relative;\"><span class=\"md-line md-end-block\" cid=\"c10\" mdtype=\"line\" style=\"box-sizing: border-box; display: block;\"><span md-inline=\"plain\" style=\"box-sizing: border-box;\">c := make(chan int, 10)</span></span></p><p cid=\"c11\" mdtype=\"paragraph\" style=\"box-sizing: border-box; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; margin: 0.8em 0px; width: inherit; position: relative;\"><span class=\"md-line md-end-block\" cid=\"c12\" mdtype=\"line\" style=\"box-sizing: border-box; display: block;\"><span md-inline=\"plain\" style=\"box-sizing: border-box;\">c := make(chan int, 1)</span></span></p><p cid=\"c13\" mdtype=\"paragraph\" style=\"box-sizing: border-box; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; margin: 0.8em 0px; width: inherit; position: relative;\"><span class=\"md-line md-end-block\" cid=\"c14\" mdtype=\"line\" style=\"box-sizing: border-box; display: block;\"><span md-inline=\"plain\" style=\"box-sizing: border-box;\">type Person struct {\t</span></span></p><p cid=\"c15\" mdtype=\"paragraph\" style=\"box-sizing: border-box; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; margin: 0.8em 0px; width: inherit; position: relative;\"><span class=\"md-line md-end-block\" cid=\"c16\" mdtype=\"line\" style=\"box-sizing: border-box; display: block;\"><span md-inline=\"plain\" style=\"box-sizing: border-box;\"> \tname string</span></span></p><p cid=\"c17\" mdtype=\"paragraph\" style=\"box-sizing: border-box; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; margin: 0.8em 0px; width: inherit; position: relative;\"><span class=\"md-line md-end-block\" cid=\"c18\" mdtype=\"line\" style=\"box-sizing: border-box; display: block;\"><span md-inline=\"plain\" style=\"box-sizing: border-box;\">​\tage int</span></span></p><p cid=\"c19\" mdtype=\"paragraph\" style=\"box-sizing: border-box; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; margin: 0.8em 0px; width: inherit; position: relative;\"><span class=\"md-line md-end-block\" cid=\"c20\" mdtype=\"line\" style=\"box-sizing: border-box; display: block;\"><span md-inline=\"plain\" style=\"box-sizing: border-box;\">}</span></span></p><p cid=\"c21\" mdtype=\"paragraph\" style=\"box-sizing: border-box; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; margin: 0.8em 0px 0px; width: inherit; position: relative;\"><span class=\"md-line md-end-block\" cid=\"c22\" mdtype=\"line\" style=\"box-sizing: border-box; display: block;\"><span md-inline=\"plain\" style=\"box-sizing: border-box;\">c := make(chan *Person)  //这个chan传递的是指针</span></span></p></blockquote><ul class=\"ul-list\" cid=\"c23\" mdtype=\"list\" data-mark=\"-\" style=\"box-sizing: border-box; margin: 0.8em 0px; padding-left: 30px; font-family: 'Open Sans', 'Clear Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 16px; white-space: pre-wrap; background-color: rgb(255, 255, 255);\"><li cid=\"c24\" mdtype=\"list_item\" style=\"box-sizing: border-box; margin: 0px; position: relative;\"><p cid=\"c25\" mdtype=\"paragraph\" style=\"box-sizing: border-box; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; margin: 0.5rem 0px; width: inherit; position: relative;\"><span class=\"md-line md-end-block\" cid=\"c26\" mdtype=\"line\" style=\"box-sizing: border-box; display: block;\"><span md-inline=\"plain\" style=\"box-sizing: border-box;\">向chan发送元素可能会阻塞</span></span></p></li><li cid=\"c27\" mdtype=\"list_item\" style=\"box-sizing: border-box; margin: 0px; position: relative;\"><p cid=\"c28\" mdtype=\"paragraph\" style=\"box-sizing: border-box; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; margin: 0.5rem 0px; width: inherit; position: relative;\"><span class=\"md-line md-end-block\" cid=\"c29\" mdtype=\"line\" style=\"box-sizing: border-box; display: block;\"><span md-inline=\"plain\" style=\"box-sizing: border-box;\">从chan获取元素可能会阻塞</span></span></p></li><li cid=\"c30\" mdtype=\"list_item\" style=\"box-sizing: border-box; margin: 0px; position: relative;\"><p cid=\"c31\" mdtype=\"paragraph\" style=\"box-sizing: border-box; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; margin: 0.5rem 0px; width: inherit; position: relative;\"><span class=\"md-line md-end-block\" cid=\"c32\" mdtype=\"line\" style=\"box-sizing: border-box; display: block;\"><span md-inline=\"plain\" style=\"box-sizing: border-box;\">向一个为nil的chan发送元素会阻塞</span></span></p></li><li cid=\"c33\" mdtype=\"list_item\" style=\"box-sizing: border-box; margin: 0px; position: relative;\"><p cid=\"c34\" mdtype=\"paragraph\" style=\"box-sizing: border-box; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; margin: 0.5rem 0px; width: inherit; position: relative;\"><span class=\"md-line md-end-block\" cid=\"c35\" mdtype=\"line\" style=\"box-sizing: border-box; display: block;\"><span md-inline=\"plain\" style=\"box-sizing: border-box;\">关闭一个为nil的chan会引发恐慌</span></span></p></li><li cid=\"c36\" mdtype=\"list_item\" style=\"box-sizing: border-box; margin: 0px; position: relative;\"><p cid=\"c37\" mdtype=\"paragraph\" style=\"box-sizing: border-box; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; margin: 0.5rem 0px; width: inherit; position: relative;\"><span class=\"md-line md-end-block\" cid=\"c38\" mdtype=\"line\" style=\"box-sizing: border-box; display: block;\"><span md-inline=\"plain\" style=\"box-sizing: border-box;\">关闭一个已经关闭的chan会引发恐慌</span></span></p></li><li cid=\"c39\" mdtype=\"list_item\" style=\"box-sizing: border-box; margin: 0px; position: relative;\"><p cid=\"c40\" mdtype=\"paragraph\" style=\"box-sizing: border-box; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; margin: 0.5rem 0px; width: inherit; position: relative;\"><span class=\"md-line md-end-block\" cid=\"c41\" mdtype=\"line\" style=\"box-sizing: border-box; display: block;\"><span md-inline=\"plain\" style=\"box-sizing: border-box;\">向chan发送数据时会复制元素，如果是指针会复制指针地址</span></span></p></li><li cid=\"c42\" mdtype=\"list_item\" style=\"box-sizing: border-box; margin: 0px; position: relative;\"><p cid=\"c43\" mdtype=\"paragraph\" style=\"box-sizing: border-box; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; margin: 0.5rem 0px; width: inherit; position: relative;\"><span class=\"md-line md-end-block\" cid=\"c44\" mdtype=\"line\" style=\"box-sizing: border-box; display: block;\"><span md-inline=\"plain\" style=\"box-sizing: border-box;\">chan关闭后会保存缓存的元素</span></span></p></li><li cid=\"c45\" mdtype=\"list_item\" style=\"box-sizing: border-box; margin: 0px; position: relative;\"><p cid=\"c46\" mdtype=\"paragraph\" style=\"box-sizing: border-box; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; margin: 0.5rem 0px; width: inherit; position: relative;\"><span class=\"md-line md-end-block\" cid=\"c47\" mdtype=\"line\" style=\"box-sizing: border-box; display: block;\"><span md-inline=\"plain\" style=\"box-sizing: border-box;\">对chan的操作都是多线程安全的</span></span></p></li><li cid=\"c48\" mdtype=\"list_item\" style=\"box-sizing: border-box; margin: 0px; position: relative;\"><p cid=\"c49\" mdtype=\"paragraph\" style=\"box-sizing: border-box; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; margin: 0.5rem 0px; width: inherit; position: relative;\"><span class=\"md-line md-end-block\" cid=\"c50\" mdtype=\"line\" style=\"box-sizing: border-box; display: block;\"><span md-inline=\"plain\" style=\"box-sizing: border-box;\">将chan传递到函数是引用传递的</span></span></p></li><li cid=\"c51\" mdtype=\"list_item\" style=\"box-sizing: border-box; margin: 0px; position: relative;\"><p cid=\"c52\" mdtype=\"paragraph\" style=\"box-sizing: border-box; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; margin: 0.5rem 0px; width: inherit; position: relative;\"><span class=\"md-line md-end-block\" cid=\"c53\" mdtype=\"line\" style=\"box-sizing: border-box; display: block;\"><span md-inline=\"plain\" style=\"box-sizing: border-box;\">使用指针用于chan的数据传递可以减少因为复制代理的性能开销</span></span></p></li></ul><h4 cid=\"c54\" mdtype=\"heading\" class=\"md-end-block md-heading\" style=\"line-height: 1.4; box-sizing: border-box; font-size: 1.25em; position: relative; margin-top: 1rem; margin-bottom: 1rem; cursor: text; width: inherit; font-family: 'Open Sans', 'Clear Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif; white-space: pre-wrap; background-color: rgb(255, 255, 255);\"><span md-inline=\"plain\" style=\"box-sizing: border-box;\">Channel的技巧</span></h4><ul class=\"ul-list\" cid=\"c55\" mdtype=\"list\" data-mark=\"-\" style=\"box-sizing: border-box; margin: 0.8em 0px; padding-left: 30px; font-family: 'Open Sans', 'Clear Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 16px; white-space: pre-wrap; background-color: rgb(255, 255, 255);\"><li cid=\"c56\" mdtype=\"list_item\" style=\"box-sizing: border-box; margin: 0px; position: relative;\"><p cid=\"c57\" mdtype=\"paragraph\" style=\"box-sizing: border-box; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; margin: 0.5rem 0px; width: inherit; position: relative;\"><span class=\"md-line md-end-block\" cid=\"c58\" mdtype=\"line\" style=\"box-sizing: border-box; display: block;\"><span md-inline=\"plain\" style=\"box-sizing: border-box;\">在发送端关闭chan</span></span></p></li></ul><h4 cid=\"c59\" mdtype=\"heading\" class=\"md-end-block md-heading\" style=\"line-height: 1.4; box-sizing: border-box; font-size: 1.25em; position: relative; margin-top: 1rem; margin-bottom: 1rem; cursor: text; width: inherit; font-family: 'Open Sans', 'Clear Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif; white-space: pre-wrap; background-color: rgb(255, 255, 255);\"><span md-inline=\"plain\" style=\"box-sizing: border-box;\">单向Channel</span></h4><ul class=\"ul-list\" cid=\"c60\" mdtype=\"list\" data-mark=\"-\" style=\"box-sizing: border-box; margin: 0.8em 0px 0px; padding-left: 30px; font-family: 'Open Sans', 'Clear Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 16px; white-space: pre-wrap; background-color: rgb(255, 255, 255);\"><li cid=\"c61\" mdtype=\"list_item\" style=\"box-sizing: border-box; margin: 0px; position: relative;\"><p cid=\"c62\" mdtype=\"paragraph\" style=\"box-sizing: border-box; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; margin: 0.5rem 0px; width: inherit; position: relative;\"><span class=\"md-line md-end-block\" cid=\"c63\" mdtype=\"line\" style=\"box-sizing: border-box; display: block;\"><span md-inline=\"plain\" style=\"box-sizing: border-box;\">单独的创建一个单向channel是没有意义的，不能写入数据或者不能读取数据的chan不能做任何事情</span></span></p></li><li cid=\"c64\" mdtype=\"list_item\" style=\"box-sizing: border-box; margin: 0px; position: relative;\"><p cid=\"c65\" mdtype=\"paragraph\" style=\"box-sizing: border-box; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; margin: 0.5rem 0px; width: inherit; position: relative;\"><span class=\"md-line md-end-block\" cid=\"c66\" mdtype=\"line\" style=\"box-sizing: border-box; display: block;\"><span md-inline=\"plain\" style=\"box-sizing: border-box;\">单向的chan可由双向的chan转换而来，这种转换是不可逆的</span></span></p></li><li cid=\"c67\" mdtype=\"list_item\" style=\"box-sizing: border-box; margin: 0px; position: relative;\"><p cid=\"c68\" mdtype=\"paragraph\" style=\"box-sizing: border-box; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; margin: 0.5rem 0px; width: inherit; position: relative;\"><span class=\"md-line md-end-block\" cid=\"c69\" mdtype=\"line\" style=\"box-sizing: border-box; display: block;\"><span md-inline=\"plain\" style=\"box-sizing: border-box;\">单向的chan用在函数参数声明和返回值声明中非常有意义，可以用于限制参数</span></span></p><blockquote cid=\"c70\" mdtype=\"blockquote\" style=\"margin-top: 0.8em; margin-bottom: 0.8em; box-sizing: border-box;\"><p cid=\"c71\" mdtype=\"paragraph\" style=\"box-sizing: border-box; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; margin: 0px 0px 0.5rem; width: inherit; position: relative;\"><span class=\"md-line md-end-block\" cid=\"c72\" mdtype=\"line\" style=\"box-sizing: border-box; display: block;\"><span md-inline=\"plain\" style=\"box-sizing: border-box;\">func Generator() &lt;-chan int {</span></span></p><p cid=\"c73\" mdtype=\"paragraph\" style=\"box-sizing: border-box; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; margin: 0.5rem 0px; width: inherit; position: relative;\"><span class=\"md-line md-end-block\" cid=\"c74\" mdtype=\"line\" style=\"box-sizing: border-box; display: block;\"><span md-inline=\"plain\" style=\"box-sizing: border-box;\">​\tresults := make(chan int, 100)</span></span></p><p cid=\"c75\" mdtype=\"paragraph\" style=\"box-sizing: border-box; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; margin: 0.5rem 0px; width: inherit; position: relative;\"><span class=\"md-line md-end-block\" cid=\"c76\" mdtype=\"line\" style=\"box-sizing: border-box; display: block;\"><span md-inline=\"plain\" style=\"box-sizing: border-box;\">​\tgo func(){</span></span></p><p cid=\"c77\" mdtype=\"paragraph\" style=\"box-sizing: border-box; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; margin: 0.5rem 0px; width: inherit; position: relative;\"><span class=\"md-line md-end-block\" cid=\"c78\" mdtype=\"line\" style=\"box-sizing: border-box; display: block;\"><span md-inline=\"plain\" style=\"box-sizing: border-box;\">​\t\tfor i := 0; i &lt; 100; i++ {\t</span></span></p><p cid=\"c79\" mdtype=\"paragraph\" style=\"box-sizing: border-box; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; margin: 0.5rem 0px; width: inherit; position: relative;\"><span class=\"md-line md-end-block\" cid=\"c80\" mdtype=\"line\" style=\"box-sizing: border-box; display: block;\"><span md-inline=\"plain\" style=\"box-sizing: border-box;\">​\t\t\tresults&lt;- i</span></span></p><p cid=\"c81\" mdtype=\"paragraph\" style=\"box-sizing: border-box; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; margin: 0.5rem 0px; width: inherit; position: relative;\"><span class=\"md-line md-end-block\" cid=\"c82\" mdtype=\"line\" style=\"box-sizing: border-box; display: block;\"><span md-inline=\"plain\" style=\"box-sizing: border-box;\">​\t\t\ttime.Sleep(time.Second)</span></span></p><p cid=\"c83\" mdtype=\"paragraph\" style=\"box-sizing: border-box; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; margin: 0.5rem 0px; width: inherit; position: relative;\"><span class=\"md-line md-end-block\" cid=\"c84\" mdtype=\"line\" style=\"box-sizing: border-box; display: block;\"><span md-inline=\"plain\" style=\"box-sizing: border-box;\">​\t\t}</span></span></p><p cid=\"c85\" mdtype=\"paragraph\" style=\"box-sizing: border-box; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; margin: 0.5rem 0px; width: inherit; position: relative;\"><span class=\"md-line md-end-block\" cid=\"c86\" mdtype=\"line\" style=\"box-sizing: border-box; display: block;\"><span md-inline=\"plain\" style=\"box-sizing: border-box;\">​\t}()</span></span></p><p cid=\"c87\" mdtype=\"paragraph\" style=\"box-sizing: border-box; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; margin: 0.5rem 0px; width: inherit; position: relative;\"><span class=\"md-line md-end-block\" cid=\"c88\" mdtype=\"line\" style=\"box-sizing: border-box; display: block;\"><span md-inline=\"plain\" style=\"box-sizing: border-box;\">​\treturn results</span></span></p><p cid=\"c89\" mdtype=\"paragraph\" style=\"box-sizing: border-box; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; margin: 0.5rem 0px 0px; width: inherit; position: relative;\"><span class=\"md-line md-end-block md-focus\" cid=\"c90\" mdtype=\"line\" style=\"box-sizing: border-box; display: block;\"><span md-inline=\"plain\" style=\"box-sizing: border-box;\">}</span></span></p></blockquote></li></ul>"
    },
    {
      "type": "text",
      "data": "<div><b>跨平台交叉编译</b></div>GOPATH=/Users/synder/Documents/project/golang GOOS=linux GOARCH=amd64 go build ssdb.go"
    }
  ]
}