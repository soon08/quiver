{
  "title": "Github 的清点对象算法",
  "cells": [
    {
      "type": "text",
      "data": "<div class=\"asset-content entry-content\" id=\"main-content\" style=\"margin: 0px; padding: 0px; list-style-type: none; border: none; font-family: Georgia, serif; letter-spacing: -0.12px; line-height: 21.6px; widows: 1; word-spacing: 2.4px;\"><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px;\"><font color=\"#000000\">使用 Github 的时候，你有没有见过下面的提示？</font></p><blockquote style=\"margin: 2em; padding: 1em; list-style-type: none; border-width: 0.3em; border-top-style: solid; border-right-style: solid; border-bottom-style: solid; border-color: rgb(224, 223, 204); border-top-left-radius: 1em; border-top-right-radius: 1em; border-bottom-right-radius: 1em; border-bottom-left-radius: 1em; font-family: Consolas, Monaco, 'Andale Mono', monospace; overflow: auto;\"><pre class=\" language-bash\" style=\"padding: 0em 0em 0.5em; list-style-type: none; border: none; font-family: Consolas, Monaco, 'Andale Mono', monospace; direction: ltr; word-spacing: normal; tab-size: 4; overflow: auto;\"><code class=\" language-bash\" style=\"list-style-type: none; border-style: none; font-family: Consolas, Monaco, 'Andale Mono', monospace; direction: ltr; word-spacing: normal; tab-size: 4;\"><font color=\"#000000\">\n$ git clone https<span class=\"token punctuation\" style=\"margin: 0px; padding: 0px; list-style-type: none; border: none;\">:</span><span class=\"token operator\" style=\"margin: 0px; padding: 0px; list-style-type: none; border: none;\">/</span><span class=\"token operator\" style=\"margin: 0px; padding: 0px; list-style-type: none; border: none;\">/</span>github<span class=\"token punctuation\" style=\"margin: 0px; padding: 0px; list-style-type: none; border: none;\">.</span>com<span class=\"token operator\" style=\"margin: 0px; padding: 0px; list-style-type: none; border: none;\">/</span>torvalds<span class=\"token operator\" style=\"margin: 0px; padding: 0px; list-style-type: none; border: none;\">/</span>linux\nCloning into <span class=\"token string\" style=\"margin: 0px; padding: 0px; list-style-type: none; border: none;\">'linux'</span><span class=\"token punctuation\" style=\"margin: 0px; padding: 0px; list-style-type: none; border: none;\">.</span><span class=\"token punctuation\" style=\"margin: 0px; padding: 0px; list-style-type: none; border: none;\">.</span><span class=\"token punctuation\" style=\"margin: 0px; padding: 0px; list-style-type: none; border: none;\">.</span>\nremote<span class=\"token punctuation\" style=\"margin: 0px; padding: 0px; list-style-type: none; border: none;\">:</span> Counting objects<span class=\"token punctuation\" style=\"margin: 0px; padding: 0px; list-style-type: none; border: none;\">:</span> <span class=\"token number\" style=\"margin: 0px; padding: 0px; list-style-type: none; border: none;\">4350078</span><span class=\"token punctuation\" style=\"margin: 0px; padding: 0px; list-style-type: none; border: none;\">,</span> <span class=\"token keyword\" style=\"margin: 0px; padding: 0px; list-style-type: none; border: none;\">done</span><span class=\"token punctuation\" style=\"margin: 0px; padding: 0px; list-style-type: none; border: none;\">.</span>\nremote<span class=\"token punctuation\" style=\"margin: 0px; padding: 0px; list-style-type: none; border: none;\">:</span> Compressing objects<span class=\"token punctuation\" style=\"margin: 0px; padding: 0px; list-style-type: none; border: none;\">:</span> <span class=\"token number\" style=\"margin: 0px; padding: 0px; list-style-type: none; border: none;\">100</span><span class=\"token operator\" style=\"margin: 0px; padding: 0px; list-style-type: none; border: none;\">%</span> <span class=\"token punctuation\" style=\"margin: 0px; padding: 0px; list-style-type: none; border: none;\">(</span><span class=\"token number\" style=\"margin: 0px; padding: 0px; list-style-type: none; border: none;\">4677</span><span class=\"token operator\" style=\"margin: 0px; padding: 0px; list-style-type: none; border: none;\">/</span><span class=\"token number\" style=\"margin: 0px; padding: 0px; list-style-type: none; border: none;\">4677</span><span class=\"token punctuation\" style=\"margin: 0px; padding: 0px; list-style-type: none; border: none;\">)</span><span class=\"token punctuation\" style=\"margin: 0px; padding: 0px; list-style-type: none; border: none;\">,</span> <span class=\"token keyword\" style=\"margin: 0px; padding: 0px; list-style-type: none; border: none;\">done</span><span class=\"token punctuation\" style=\"margin: 0px; padding: 0px; list-style-type: none; border: none;\">.</span>\nReceiving objects<span class=\"token punctuation\" style=\"margin: 0px; padding: 0px; list-style-type: none; border: none;\">:</span>   <span class=\"token number\" style=\"margin: 0px; padding: 0px; list-style-type: none; border: none;\">4</span><span class=\"token operator\" style=\"margin: 0px; padding: 0px; list-style-type: none; border: none;\">%</span> <span class=\"token punctuation\" style=\"margin: 0px; padding: 0px; list-style-type: none; border: none;\">(</span><span class=\"token number\" style=\"margin: 0px; padding: 0px; list-style-type: none; border: none;\">191786</span><span class=\"token operator\" style=\"margin: 0px; padding: 0px; list-style-type: none; border: none;\">/</span><span class=\"token number\" style=\"margin: 0px; padding: 0px; list-style-type: none; border: none;\">4350078</span><span class=\"token punctuation\" style=\"margin: 0px; padding: 0px; list-style-type: none; border: none;\">)</span><span class=\"token punctuation\" style=\"margin: 0px; padding: 0px; list-style-type: none; border: none;\">,</span> <span class=\"token number\" style=\"margin: 0px; padding: 0px; list-style-type: none; border: none;\">78.19</span> MiB <span class=\"token operator\" style=\"margin: 0px; padding: 0px; list-style-type: none; border: none;\">|</span> <span class=\"token number\" style=\"margin: 0px; padding: 0px; list-style-type: none; border: none;\">8.70</span> MiB<span class=\"token operator\" style=\"margin: 0px; padding: 0px; list-style-type: none; border: none;\">/</span>s\n</font></code></pre></blockquote><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px;\"><font color=\"#000000\">这段提示说，远程代码库一共有4350078个对象需要克隆。</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px;\"><font color=\"#000000\">这就叫\"清点对象\"（counting objects），Github需要实时计算出来，需要克隆的对象总数。</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px;\"><font color=\"#000000\">这个过程非常慢，根据Github的披露，像Linux kernel这样巨大的库，清点一次需要8分钟！也就是说，发出<code style=\"margin: auto 3px; padding: 0px 5px; list-style-type: none; border: none; display: inline-block; border-top-left-radius: 5px; border-top-right-radius: 5px; border-bottom-right-radius: 5px; border-bottom-left-radius: 5px;\">git clone</code>命令后，会干等八分钟，然后才会开始真正的数据传输。这当然是无法忍受的。Github团队一直想解决这个问题。</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px;\"><font color=\"#000000\">后来，他们终于发现了一种新的<a href=\"http://githubengineering.com/counting-objects/\" target=\"_blank\" style=\"margin: 0px; padding: 0px; list-style-type: none; border: none;\">算法</a>，现在清点一次只要3毫秒！</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px;\"><font color=\"#000000\"><img src=\"quiver-image-url/332F11E1547DE96B038B19DCB5652EAD.png\" alt=\"\" title=\"\" style=\"margin: 0px; padding: 0px; list-style-type: none; border: 0.3em solid rgb(224, 223, 204); border-top-left-radius: 1em; border-top-right-radius: 1em; border-bottom-right-radius: 1em; border-bottom-left-radius: 1em;\"></font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px;\"><font color=\"#000000\">为了理解这个算法，你必须先知道，什么是Git的对象。简单说，对象就是文件，最重要的对象有三种。</font></p><blockquote style=\"margin: 2em; padding: 1em; list-style-type: none; border-width: 0.3em; border-top-style: solid; border-right-style: solid; border-bottom-style: solid; border-color: rgb(224, 223, 204); border-top-left-radius: 1em; border-top-right-radius: 1em; border-bottom-right-radius: 1em; border-bottom-left-radius: 1em; font-family: Consolas, Monaco, 'Andale Mono', monospace; overflow: auto;\"><ul style=\"margin: 0px 0px 0px 4em; padding: 0px; list-style-type: none; border: none;\"><li style=\"margin: 0px; padding: 0px; list-style-type: square; text-align: left; border: none; line-height: 35.2px;\"><font color=\"#000000\">快照对象（Commit）</font></li><li style=\"margin: 0px; padding: 0px; list-style-type: square; text-align: left; border: none; line-height: 35.2px;\"><font color=\"#000000\">目录对象（Directory）</font></li><li style=\"margin: 0px; padding: 0px; list-style-type: square; text-align: left; border: none; line-height: 35.2px;\"><font color=\"#000000\">文件对象（File）</font></li></ul></blockquote><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px;\"><font color=\"#000000\">每次提交代码的时候，会生成一个commit对象，里面有对应的当前\"目录对象\"的名字。\"目录对象\"保存了代码根目录所含有的子目录和文件信息。每一个子目录就是另一个\"目录对象\"，每一个文件则是\"文件对象\"，里面是具体的文件内容。</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px;\"><font color=\"#000000\">所以，\"清点对象\"就是清点各种commit、目录、文件等。<code style=\"margin: auto 3px; padding: 0px 5px; list-style-type: none; border: none; display: inline-block; border-top-left-radius: 5px; border-top-right-radius: 5px; border-bottom-right-radius: 5px; border-bottom-left-radius: 5px;\">git clone</code>和<code style=\"margin: auto 3px; padding: 0px 5px; list-style-type: none; border: none; display: inline-block; border-top-left-radius: 5px; border-top-right-radius: 5px; border-bottom-right-radius: 5px; border-bottom-left-radius: 5px;\">git fetch</code>操作都需要清点对象，因为需要知道，到底下载哪些对象文件。</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px;\"><font color=\"#000000\"><img src=\"quiver-image-url/C7FE5CE3D1B84446F880A46D92425911.png\" alt=\"\" title=\"\" style=\"margin: 0px; padding: 0px; list-style-type: none; border: 0.3em solid rgb(224, 223, 204); border-top-left-radius: 1em; border-top-right-radius: 1em; border-bottom-right-radius: 1em; border-bottom-left-radius: 1em;\"></font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px;\"><font color=\"#000000\">清点对象的原始算法如下。</font></p><blockquote style=\"margin: 2em; padding: 1em; list-style-type: none; border-width: 0.3em; border-top-style: solid; border-right-style: solid; border-bottom-style: solid; border-color: rgb(224, 223, 204); border-top-left-radius: 1em; border-top-right-radius: 1em; border-bottom-right-radius: 1em; border-bottom-left-radius: 1em; font-family: Consolas, Monaco, 'Andale Mono', monospace; overflow: auto;\"><ol start=\"1\" style=\"margin: 0px 0px 0px 4em; padding: 0px; list-style-type: none; border: none;\"><li style=\"margin: 0px; padding: 0px; list-style-type: decimal; text-align: left; border: none; line-height: 35.2px; list-style-position: inside;\"><font color=\"#000000\">列出本地所有分支最新的一个commit</font></li><li style=\"margin: 0px; padding: 0px; list-style-type: decimal; text-align: left; border: none; line-height: 35.2px; list-style-position: inside;\"><font color=\"#000000\">列出远程所有分支最新的一个commit</font></li><li style=\"margin: 0px; padding: 0px; list-style-type: decimal; text-align: left; border: none; line-height: 35.2px; list-style-position: inside;\"><font color=\"#000000\">两者进行比较，只要有不同，就意味着分支发生变动</font></li><li style=\"margin: 0px; padding: 0px; list-style-type: decimal; text-align: left; border: none; line-height: 35.2px; list-style-position: inside;\"><font color=\"#000000\">每一个发生变动的commit，都清点其中具体变动的子目录和文件</font></li><li style=\"margin: 0px; padding: 0px; list-style-type: decimal; text-align: left; border: none; line-height: 35.2px; list-style-position: inside;\"><font color=\"#000000\">追溯到当前commit的父节点，重复第四步，直至本地与远程的历史一致为止</font></li><li style=\"margin: 0px; padding: 0px; list-style-type: decimal; text-align: left; border: none; line-height: 35.2px; list-style-position: inside;\"><font color=\"#000000\">加总所有需要变动的对象</font></li></ol></blockquote><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px;\"><font color=\"#000000\">上面的过程说明，\"清点对象\"是一个文件遍历算法，变动的对象会被一一清点到，这就意味着大量的文件读操作。对于大型代码库来说，这个过程非常慢。</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px;\"><font color=\"#000000\">Github团队想到的新算法，是建立一个Bitmap索引，即为每一个commit生成一个二进制值。</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px;\"><font color=\"#000000\">打开本地Github仓库的<code style=\"margin: auto 3px; padding: 0px 5px; list-style-type: none; border: none; display: inline-block; border-top-left-radius: 5px; border-top-right-radius: 5px; border-bottom-right-radius: 5px; border-bottom-left-radius: 5px;\">.git/objects/pack/</code>目录，你会看到一个索引文件和一个数据文件，它们就是Bitmap。简单说，这两个文件索引了当前代码库的所有对象，然后使用一个二进制值代表这些对象。有多少个对象，这个二进制值就有多少位。它的第n位，就代表数据文件里面的第n个对象。</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px;\"><font color=\"#000000\"><img src=\"quiver-image-url/73039D7A158A0191B794E87A0B29E300.png\" alt=\"\" title=\"\" style=\"margin: 0px; padding: 0px; list-style-type: none; border: 0.3em solid rgb(224, 223, 204); border-top-left-radius: 1em; border-top-right-radius: 1em; border-bottom-right-radius: 1em; border-bottom-left-radius: 1em;\"></font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px;\"><font color=\"#000000\">每个commit都会有一个对应的二进制值，表示当前快照包含的所有对象。这些对象对应的二进制位都为1，其他二进制位都为0。</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px;\"><font color=\"#000000\">这样做的好处是，不用读取commit对象，只要读取这个二进制值，就会知道当前commit包含了哪些节点。更妙的是，两个二进制值只要做一次XOR运算，就会知道哪些位（即哪些对象）发生了变动。而且，因为新的对象总是添加到现有二进制位的后面，所以只要读取多出来的那些位，就知道当前commit比上一次commit多出了哪些对象。</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px;\"><font color=\"#000000\">这样一来，\"清点对象\"就变成了二进制值的比较运算，因此速度极快。进一步的介绍，请参看官方文档<a href=\"https://github.com/gitster/git/commit/fff4275\" target=\"_blank\" style=\"margin: 0px; padding: 0px; list-style-type: none; border: none;\">《Bitmap的解释》</a>，<a href=\"https://github.com/gitster/git/blob/master/Documentation/technical/bitmap-format.txt\" target=\"_blank\" style=\"margin: 0px; padding: 0px; list-style-type: none; border: none;\">《Bitmap的格式》</a>。</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px;\"><font color=\"#000000\">目前，Github的生产环境已经部署了这套算法，用户再也不用为了清点对象，而苦苦等待了。而且，Github团队还把它合并进了Git，这意味着，从此所有Git实现都可以使用Bitmap功能了，因此将来肯定还会有更多好玩的用法出现。</font></p></div>"
    }
  ]
}