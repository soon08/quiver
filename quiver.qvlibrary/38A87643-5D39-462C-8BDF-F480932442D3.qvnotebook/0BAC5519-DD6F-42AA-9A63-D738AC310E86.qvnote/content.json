{
  "title": "十大算法",
  "cells": [
    {
      "type": "text",
      "data": "<section class=\"summary\" style=\"box-sizing: border-box; padding: 15px 0px; color: rgb(153, 153, 153); font-size: 15px; margin-bottom: 0px; font-family: 'PingFang SC', 'Lantinghei SC', 'Helvetica Neue', Helvetica, Arial, 'Microsoft YaHei', '\\\\5FAE软雅黑', STHeitiSC-Light, simsun, '\\\\5B8B体', 'WenQuanYi Zen Hei', 'WenQuanYi Micro Hei', sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">软件正在统治世界。而软件的核心则是算法。算法千千万万，又有哪些算法属于“皇冠上的珍珠”呢？Marcos Otero给出了他的看法。 什么是算法？ 通俗而言，算法是一个定义明确的计算过程，可以一些值或一组值作为输入并产生一些值或一组值作为输出。因此算法就是将输入转为输出的一系列计算步骤。</section><div style=\"box-sizing: border-box; color: rgb(61, 70, 77); font-family: 'PingFang SC', 'Lantinghei SC', 'Helvetica Neue', Helvetica, Arial, 'Microsoft YaHei', '\\\\5FAE软雅黑', STHeitiSC-Light, simsun, '\\\\5B8B体', 'WenQuanYi Zen Hei', 'WenQuanYi Micro Hei', sans-serif; font-size: 15px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><section class=\"textblock\" style=\"box-sizing: border-box; line-height: 28px;\"><p style=\"box-sizing: border-box; margin: 0px 0px 26px;\">软件正在统治世界。而软件的核心则是算法。算法千千万万，又有哪些算法属于“皇冠上的珍珠”呢？Marcos Otero给出了他的<a href=\"https://medium.com/tech-talk/the-real-10-algorithms-that-dominate-our-world-e95fa9f16c04?curator=MediaREDEF?curator=MediaREDEF?curator=MediaREDEF%3Fcurator%3DMediaREDEF\" style=\"box-sizing: border-box; background-color: transparent; text-decoration: none; color: rgb(61, 70, 77); transition: all 0.2s ease; cursor: pointer; border-style: solid; border-width: 0px 0px 1px; border-color: rgb(153, 153, 153); padding: 0px 0px 1px;\">看法</a>。</p><p style=\"box-sizing: border-box; margin: 0px 0px 26px;\"><span style=\"box-sizing: border-box; font-weight: 600;\">什么是算法？</span></p><p style=\"box-sizing: border-box; margin: 0px 0px 26px;\"><span style=\"font-weight: 600;\">&nbsp; &nbsp; &nbsp; &nbsp;</span>通俗而言，算法是一个定义明确的计算过程，可以一些值或一组值作为输入并产生一些值或一组值作为输出。因此算法就是将输入转为输出的一系列计算步骤。</p><p style=\"box-sizing: border-box; margin: 0px 0px 26px;\">—Thomas H. Cormen，Chales E. Leiserson，算法入门第三版</p><p style=\"box-sizing: border-box; margin: 0px 0px 26px;\">简而言之，算法就是可完成特定任务的一系列步骤，它应该具备三大特征：</p><blockquote style=\"box-sizing: border-box; margin-top: 30px; margin-bottom: 30px; padding: 6px 0px 6px 55px; border: 0px; position: relative; color: rgb(61, 70, 77);\"><p style=\"box-sizing: border-box; margin: 0px; padding: 6px 10px;\">1、有限</p><p style=\"box-sizing: border-box; margin: 0px; padding: 6px 10px;\">2、指令明确</p><p style=\"box-sizing: border-box; margin: 0px; padding: 6px 10px;\">3、有效</p></blockquote><p style=\"box-sizing: border-box; margin: 0px 0px 26px;\">以下是Marcos Otero推荐的十大算法：</p><p style=\"box-sizing: border-box; margin: 0px 0px 26px;\"><span style=\"box-sizing: border-box; font-weight: 600;\">1、归并排序、快速排序及堆积排序</span></p><p style=\"box-sizing: border-box; margin: 0px 0px 26px;\">最好的排序算法跟需求密切相关，很难评判。但是从使用上说，这三种的使用频率更高。</p><p style=\"box-sizing: border-box; margin: 0px 0px 26px;\"><a href=\"http://baike.baidu.com/view/90797.htm\" style=\"box-sizing: border-box; background-color: transparent; text-decoration: none; color: rgb(61, 70, 77); transition: all 0.2s ease; cursor: pointer; border-style: solid; border-width: 0px 0px 1px; border-color: rgb(153, 153, 153); padding: 0px 0px 1px;\">归并排序</a>由冯•诺依曼于1945年发明。这是一种基于比较的排序算法，采用分而治之的办法解决问题，其阶是O(n^2)。</p><p style=\"box-sizing: border-box; margin: 0px 0px 26px;\"><a href=\"http://baike.baidu.com/view/19016.htm\" style=\"box-sizing: border-box; background-color: transparent; text-decoration: none; color: rgb(61, 70, 77); transition: all 0.2s ease; cursor: pointer; border-style: solid; border-width: 0px 0px 1px; border-color: rgb(153, 153, 153); padding: 0px 0px 1px;\">快速排序</a>可采用原地分割方法，也可采用分而治之算法。这不是一种稳定的排序算法，但对于基于RAM（内存）的数组排序来说非常有效。</p><p style=\"box-sizing: border-box; margin: 0px 0px 26px;\"><a href=\"http://baike.baidu.com/view/157305.htm\" style=\"box-sizing: border-box; background-color: transparent; text-decoration: none; color: rgb(61, 70, 77); transition: all 0.2s ease; cursor: pointer; border-style: solid; border-width: 0px 0px 1px; border-color: rgb(153, 153, 153); padding: 0px 0px 1px;\">堆排序</a>采用优先级队列来减少数据中的搜索时间。该算法也是原地算法，并非稳定排序。<br style=\"box-sizing: border-box;\">这些排序算法相对于以前的冒泡排序算法等有了巨大改进，实际上我们今天的数据挖掘、人工智能、链接分析及包括web在内的大多数计算工具都要感谢它们。</p><p style=\"box-sizing: border-box; margin: 0px 0px 26px;\"><span style=\"box-sizing: border-box; font-weight: 600;\">2、傅里叶变换与快速傅里叶变换</span></p><p style=\"box-sizing: border-box; margin: 0px 0px 26px;\">我们的整个数字世界都使用这两个<a href=\"http://baike.baidu.com/view/191871.htm?fromtitle=%E5%82%85%E9%87%8C%E5%8F%B6%E5%8F%98%E6%8D%A2&amp;fromid=7119029&amp;type=syn\" style=\"box-sizing: border-box; background-color: transparent; text-decoration: none; color: rgb(61, 70, 77); transition: all 0.2s ease; cursor: pointer; border-style: solid; border-width: 0px 0px 1px; border-color: rgb(153, 153, 153); padding: 0px 0px 1px;\">简单但非常强大的算法</a>，其作用是将信号从时域转为频域或者反之。实际上，你看得到这篇文章得感谢这些算法。</p><p style=\"box-sizing: border-box; margin: 0px 0px 26px;\">互联网、你的WiFi、智能手机、电话、计算机、路由器、卫星，几乎所有内置有计算机的东西都会以各种方式使用这两算法。如果不研究这些算法，你就拿不到电子、计算或通信方面的学位。</p><p style=\"box-sizing: border-box; margin: 0px 0px 26px;\"><span style=\"box-sizing: border-box; font-weight: 600;\">3、迪杰斯特拉（Dijkstra）算法</span></p><p style=\"box-sizing: border-box; margin: 0px 0px 26px;\"><a href=\"http://baike.baidu.com/view/1712262.htm?fromtitle=Dijkstra%E7%AE%97%E6%B3%95&amp;fromid=215612&amp;type=syn\" style=\"box-sizing: border-box; background-color: transparent; text-decoration: none; color: rgb(61, 70, 77); transition: all 0.2s ease; cursor: pointer; border-style: solid; border-width: 0px 0px 1px; border-color: rgb(153, 153, 153); padding: 0px 0px 1px;\">Dijkstra</a>是一种图谱搜索算法。许多问题都可以建模为图谱，然后利用Dijkstra寻找两个节点之间的最短路径。如果没有Dijkstra算法，互联网的运营效率必将大大降低。虽然今天我们已经有了更好的寻找最短路径的解决方案，但出于稳定性的要求，Dijkstra算法仍然被很多系统使用。</p><p style=\"box-sizing: border-box; margin: 0px 0px 26px;\"><span style=\"box-sizing: border-box; font-weight: 600;\">4、RSA算法</span></p><p style=\"box-sizing: border-box; margin: 0px 0px 26px;\">如果没有密码术和网络安全，互联网就不会像今天一样重要，因为电子商务和电子交易需要这些技术来确保交易安全。而<a href=\"http://baike.baidu.com/view/10613.htm\" style=\"box-sizing: border-box; background-color: transparent; text-decoration: none; color: rgb(61, 70, 77); transition: all 0.2s ease; cursor: pointer; border-style: solid; border-width: 0px 0px 1px; border-color: rgb(153, 153, 153); padding: 0px 0px 1px;\">RSA算法</a>是最重要的密码学算法之一。该算法由同名公司的创始人（Ron Rivest、Adi Shamir和Leonard Adleman）开发，它让密码学普及到了千家万户并奠定了密码术的应用基础。RSA要解决的问题既简单又复杂：如何在独立平台与最终用户之间共享公钥。其解决方案是加密。RSA加密的基础是一个十分简单的数论事实：将两个大素数相乘十分容易，但是想要对其乘积进行因式分解却极其困难，因此可以将乘积公开作为加密密钥。但在分布式计算和量子计算机理论日趋成熟的今天，RSA加密安全性受到了挑战。</p><p style=\"box-sizing: border-box; margin: 0px 0px 26px;\"><span style=\"box-sizing: border-box; font-weight: 600;\">5、安全哈希算法（SHA）</span></p><p style=\"box-sizing: border-box; margin: 0px 0px 26px;\">这个实际上并不算是算法，而是由美国国家标准技术研究所开发的一系列密码杂凑函数。但是这系列函数是全世界运作的基石。应用商店，电子邮件、反病毒、浏览器等在使用<a href=\"http://baike.baidu.com/view/531723.htm\" style=\"box-sizing: border-box; background-color: transparent; text-decoration: none; color: rgb(61, 70, 77); transition: all 0.2s ease; cursor: pointer; border-style: solid; border-width: 0px 0px 1px; border-color: rgb(153, 153, 153); padding: 0px 0px 1px;\">SHA</a>系列函数，SHA函数可用来确定下载的东西是否自己想要的东西，还是说遭遇了中间人攻击或钓鱼攻击。</p><p style=\"box-sizing: border-box; margin: 0px 0px 26px;\"><span style=\"box-sizing: border-box; font-weight: 600;\">6、整数因子分解</span></p><p style=\"box-sizing: border-box; margin: 0px 0px 26px;\">这是一个在计算领域使用频繁的数学算法。如果没有这一算法，密码术就会变得不安全得多。整数因子分解是用来将一个合数分解成一系列素因子的一系列步骤。<a href=\"http://baike.baidu.com/view/2684789.htm\" style=\"box-sizing: border-box; background-color: transparent; text-decoration: none; color: rgb(61, 70, 77); transition: all 0.2s ease; cursor: pointer; border-style: solid; border-width: 0px 0px 1px; border-color: rgb(153, 153, 153); padding: 0px 0px 1px;\">整数因子分解</a>可被视为是FNP问题（FNP是难以解决的典型NP问题的扩展）。</p><p style=\"box-sizing: border-box; margin: 0px 0px 26px;\">许多密码协议均基于难以分解的大型合数或相关问题。比方说前面提到的RSA问题。如果有算法能够有效分解任意数字，那么就会使得基于RSA的公钥密码系统陷入不安全的境地。</p><p style=\"box-sizing: border-box; margin: 0px 0px 26px;\">而量子计算的诞生则令此问题的解决变得容易，从而也打开了一个全新的领域，可利用量子世界的属性来令系统更加安全。</p><p style=\"box-sizing: border-box; margin: 0px 0px 26px;\"><span style=\"box-sizing: border-box; font-weight: 600;\">7、链接分析</span></p><p style=\"box-sizing: border-box; margin: 0px 0px 26px;\">在互联网时代，不同实体间关系的分析至关重要。从搜索引擎和社交网络到营销分析工具，每个人都想找出互联网的真正结构。</p><p style=\"box-sizing: border-box; margin: 0px 0px 26px;\"><a href=\"http://baike.baidu.com/view/888363.htm\" style=\"box-sizing: border-box; background-color: transparent; text-decoration: none; color: rgb(61, 70, 77); transition: all 0.2s ease; cursor: pointer; border-style: solid; border-width: 0px 0px 1px; border-color: rgb(153, 153, 153); padding: 0px 0px 1px;\">链接分析</a>无疑是公众对算法的最大困惑与迷思之一。其问题在于进行链接分析有不同的方式，而增加一些特征就会令每一算法略有不同（从而使得算法受到专利保护），但基本上这些算法都是类似的。</p><p style=\"box-sizing: border-box; margin: 0px 0px 26px;\">链接分析算法首先由Gabriel Pinski和Francis Narin在1976年发明。其背后的思路很简单，即把图谱以矩阵的形式表示，从而转为特征值问题，而特征值有助于了解图谱结构及每个节点的相对重要性。</p><p style=\"box-sizing: border-box; margin: 0px 0px 26px;\">Google的PageRank，Facebook展示新闻源，Google+，Facebook朋友推荐，LinkedIn工作及联系人推荐，Netflix与Hulu的电影推荐，YouTube视频推荐等均使用了链接分析算法。虽然每个都有不同的目标和参数，但其背后的数学是一样的。</p><p style=\"box-sizing: border-box; margin: 0px 0px 26px;\">尽管Google似乎是利用此类算法的第一家公司，但是实际上百度创始人李彦宏在Google诞生2两年前做的搜索引擎“RankDex”已经利用这种思路来进行搜索排名了。</p><p style=\"box-sizing: border-box; margin: 0px 0px 26px;\"><span style=\"box-sizing: border-box; font-weight: 600;\">8、比例积分微分算法</span></p><p style=\"box-sizing: border-box; margin: 0px 0px 26px;\">如果你用过飞机、汽车、微型服务或手机网络，如果你在工厂呆过或者见过机器人，那么你已经见识过这一<a href=\"http://zh.wikipedia.org/wiki/PID%E6%8E%A7%E5%88%B6%E5%99%A8\" style=\"box-sizing: border-box; background-color: transparent; text-decoration: none; color: rgb(61, 70, 77); transition: all 0.2s ease; cursor: pointer; border-style: solid; border-width: 0px 0px 1px; border-color: rgb(153, 153, 153); padding: 0px 0px 1px;\">PID</a>算法的作用了。</p><p style=\"box-sizing: border-box; margin: 0px 0px 26px;\">该算法利用了控制回路机制来让期望输出信号与实际输出信号之间的错误降到最小。只要需要信号处理或需要电子系统来控制自动化的机械、水力或热力系统就要用到它。</p><p style=\"box-sizing: border-box; margin: 0px 0px 26px;\">因此可以说如果没有这一算法，人类的现代文明将不复存在。</p><p style=\"box-sizing: border-box; margin: 0px 0px 26px;\"><span style=\"box-sizing: border-box; font-weight: 600;\">9、数据压缩算法</span></p><p style=\"box-sizing: border-box; margin: 0px 0px 26px;\">数据压缩算法无疑是非常重要的，因为几乎在所有的结构中都要用到。除了最明显的压缩文档以外，网页下载时也会压缩，视频游戏、视频、音乐、数据存储、云计算、数据库等等也都要使用压缩算法。可以说几乎所有应用都要使用压缩算法。压缩算法令系统更有效成本更低，但是要想确定哪一个最重要却很困难，因为应用不同，使用的压缩算法从zip到mp3、JPEG或MPEG-2各异。</p><p style=\"box-sizing: border-box; margin: 0px 0px 26px;\"><span style=\"box-sizing: border-box; font-weight: 600;\">10、随机数生成算法</span></p><p style=\"box-sizing: border-box; margin: 0px 0px 26px;\">很多应用都需要随机数。像interlink connection，密码系统、视频游戏、人工智能、优化、问题的初始条件，金融等都需要生成随机数。但实际上目前我们并没有“真正”的随机数生成器，尽管有一些伪随机数生成器也是非常有效的。</p><p style=\"box-sizing: border-box; margin: 0px 0px 26px;\">当然，十大算法也可能给有凑数之嫌，审视的角度不同对算法的重要性看法也会很不一样，如果你认为这一榜单有错漏的地方，不妨在评论中贡献你的意见。</p></section></div>"
    }
  ]
}