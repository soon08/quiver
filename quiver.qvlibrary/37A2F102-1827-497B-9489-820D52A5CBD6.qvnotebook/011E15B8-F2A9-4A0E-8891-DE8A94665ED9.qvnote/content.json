{
  "title": "CoreLocation实现定位",
  "cells": [
    {
      "type": "text",
      "data": "<h1 class=\"article_title\" style=\"outline: 0px; margin: 0px; font-family: 'Microsoft YaHei'; font-size: 20px; line-height: 30px; font-variant-ligatures: normal; font-variant-position: normal; font-variant-numeric: normal; font-variant-alternates: normal; font-variant-east-asian: normal; widows: 1;\"><span style=\"color: rgb(0, 0, 0); font-family: arial; font-size: 14px;\">CoreLocation是iOS中一个提供设备定位的框架。通过这个框架可以实现定位处理，从而获取位置数据，比如经度、纬度、海拔信息等。</span><br></h1><div class=\"news_content\" style=\"outline: 0px; font-family: arial; font-size: 14px; font-variant-ligatures: normal; font-variant-position: normal; font-variant-numeric: normal; font-variant-alternates: normal; font-variant-east-asian: normal; line-height: normal; widows: 1;\"><div style=\"outline: 0px;\"><font color=\"#000000\"><br style=\"outline: 0px;\"></font></div><div style=\"outline: 0px;\"><span style=\"outline: 0px;\"><font color=\"#000000\"><b>1.定位精度的设置</b></font></span></div><div style=\"outline: 0px;\"><font color=\"#000000\">定位服务管理类CLLocationManager的desiredAccuracy属性表示精准度，有如下6种选择：</font></div><font color=\"#000000\"><ul><li><span style=\"outline: 0px;\">kCLLocationAccuracyBestForNavigation</span>&nbsp;： 精度最高，一般用于导航<br></li><li><span style=\"outline: 0px;\">kCLLocationAccuracyBest</span>&nbsp;： &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 精确度最佳<br></li><li><span style=\"outline: 0px;\">kCLLocationAccuracyNearestTenMeters</span>&nbsp;： 精确度10m以内<br></li><li><span style=\"outline: 0px;\">kCLLocationAccuracyHundredMeters</span>&nbsp;： &nbsp; &nbsp; &nbsp;精确度100m以内<br></li><li><span style=\"outline: 0px;\">kCLLocationAccuracyKilometer</span>&nbsp;： &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 精确度1000m以内<br></li><li><span style=\"outline: 0px;\">kCLLocationAccuracyThreeKilometers</span>&nbsp;： &nbsp; &nbsp;精确度3000m以内<br></li></ul></font><div style=\"outline: 0px;\"><font color=\"#000000\"><br style=\"outline: 0px;\"></font></div><div style=\"outline: 0px;\"><span style=\"outline: 0px;\"><font color=\"#000000\"><b>2.位置管理器更新频率的设置</b></font></span></div><div style=\"outline: 0px;\"><font color=\"#000000\">我们无法直接控制位置管理器更新的频率，但可使用位置管理器的distanceFilter属性（单位米）进行间接控制。</font></div><div style=\"outline: 0px;\"><font color=\"#000000\">它指设备（水平或垂直）移动多少米后才将另一个更新发送给委托。定位要求的精度越高，distanceFilter属性的值越小，应用程序的耗电量就越大。</font></div><div style=\"outline: 0px;\"></div><font color=\"#000000\"><br style=\"outline: 0px;\"><span style=\"outline: 0px;\"><b>3.下面通过一个样例演示如何获取设备相关的位置数据（经度，纬度，海拔，速度等信息）&nbsp;</b></span></font><div style=\"outline: 0px;\"><font color=\"#000000\">&nbsp;</font><div style=\"outline: 0px;\"><font color=\"#000000\"><span style=\"outline: 0px;\">（1）在 info.plist里加入定位描述（Value值为空也可以）：</span>&nbsp;</font></div><div style=\"outline: 0px;\"><ul><li><span style=\"color: rgb(0, 0, 0); outline: 0px;\">NSLocationWhenInUseDescription</span><span style=\"color: rgb(0, 0, 0);\">&nbsp;</span><span style=\"color: rgb(0, 0, 0);\">：允许在前台获取GPS的描述&nbsp;</span><br></li><li><span style=\"color: rgb(0, 0, 0); outline: 0px;\">NSLocationAlwaysUsageDescription</span><span style=\"color: rgb(0, 0, 0);\">&nbsp;</span><span style=\"color: rgb(0, 0, 0);\">：允许在后台获取GPS的描述&nbsp;</span><br></li></ul></div><div style=\"outline: 0px;\"><div style=\"outline: 0px; text-align: center; line-height: 0px;\"><br></div></div><div style=\"outline: 0px;\"><font color=\"#000000\"><span style=\"outline: 0px;\">（2）代码如下：</span></font><div style=\"outline: 0px;\"><div id=\"highlighter_227671\" class=\"syntaxhighlighter  swift    \" style=\"outline: 0px; width: 1425px; margin: 1em 0px !important; position: relative !important; overflow: auto !important; font-size: 1em !important;\"></div></div></div></div></div>"
    },
    {
      "type": "code",
      "language": "swift",
      "data": "import UIKit\nimport CoreLocation\n \nclass ViewController: UIViewController, CLLocationManagerDelegate {\n     \n    //定位管理器\n    let locationManager:CLLocationManager = CLLocationManager()\n     \n    @IBOutlet weak var label1: UILabel!\n    @IBOutlet weak var label2: UILabel!\n    @IBOutlet weak var label3: UILabel!\n    @IBOutlet weak var label4: UILabel!\n    @IBOutlet weak var label5: UILabel!\n    @IBOutlet weak var label6: UILabel!\n    @IBOutlet weak var label7: UILabel!\n     \n    override func viewDidLoad() {\n        super.viewDidLoad()\n         \n        //设置定位服务管理器代理\n        locationManager.delegate = self\n        \n        //设置定位进度\n        locationManager.desiredAccuracy = kCLLocationAccuracyBest\n        \n        \n        //更新距离\n        locationManager.distanceFilter = 100\n        \n        \n        //发送授权申请\n        locationManager.requestAlwaysAuthorization()\n        \n        if (CLLocationManager.locationServicesEnabled())\n        {\n            //允许使用定位服务的话，开启定位服务更新\n            locationManager.startUpdatingLocation()\n            print(\"定位开始\")\n        }\n    }\n     \n    //定位改变执行，可以得到新位置、旧位置\n    func locationManager(manager: CLLocationManager, didUpdateLocations locations: [CLLocation]) {\n        //获取最新的坐标\n        let currLocation:CLLocation = locations.last!\n        label1.text = \"经度：\\(currLocation.coordinate.longitude)\"\n        //获取纬度\n        label2.text = \"纬度：\\(currLocation.coordinate.latitude)\"\n        //获取海拔\n        label3.text = \"海拔：\\(currLocation.altitude)\"\n        //获取水平精度\n        label4.text = \"水平精度：\\(currLocation.horizontalAccuracy)\"\n        //获取垂直精度\n        label5.text = \"垂直精度：\\(currLocation.verticalAccuracy)\"\n        //获取方向\n        label6.text = \"方向：\\(currLocation.course)\"\n        //获取速度\n        label7.text = \"速度：\\(currLocation.speed)\"\n    }\n}"
    },
    {
      "type": "text",
      "data": "<div style=\"font-family: arial; font-size: 14px; widows: 1; outline: 0px;\"><span style=\"outline: 0px;\"><font color=\"#000000\"><b>计算两个坐标间的距离</b></font></span></div><div style=\"font-family: arial; font-size: 14px; widows: 1; outline: 0px;\"><span style=\"outline: 0px;\"><font color=\"#000000\"><b><br></b></font></span></div><div style=\"font-family: arial; font-size: 14px; widows: 1; outline: 0px;\"><font color=\"#000000\">通过CLLocation对象的distanceTo方法，可以得到两个坐标间的距离，单位是米。</font></div>"
    },
    {
      "type": "code",
      "language": "swift",
      "data": "var currentLocation = CLLocation(latitude: 52.104526, longitude: 51.111151)\nvar targetLocation = CLLocation(latitude: 52.105526, longitude: 51.141151)\nvar distance:CLLocationDistance = currentLocation.distanceFromLocation(targetLocation)\nprintln(\"两点间距离是：\\(distance)\")"
    },
    {
      "type": "code",
      "language": "swift",
      "data": "\nUITabBarController *tabbarVC = [[ UITabBarController alloc ] init ];\n\nFirstViewController *FVC = [[FirstViewController ] init ];\nFVC.tabBarItem.title = @\"控制器1\" ;\nFVC.tabBarItem.image = [ UIImage imageNamed : @\"first.png\" ];\n\nSecondViewController *SVC = [[SecondViewController ] init ];\nSVC.tabBarItem.title = @\"控制器2\" ;\nSVC. tabBarItem.image = [UIImage imageNamed : @\"new.png\" ];\n\n[tabbarVC addChildViewController :FVC];\n[tabbarVC addChildViewController :SVC];\n\n"
    }
  ]
}