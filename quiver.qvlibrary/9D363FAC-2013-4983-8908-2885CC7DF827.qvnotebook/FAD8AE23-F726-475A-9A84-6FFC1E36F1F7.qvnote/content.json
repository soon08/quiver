{
  "title": "linux字符编码",
  "cells": [
    {
      "type": "text",
      "data": "<p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px; font-family: Georgia, serif; letter-spacing: -0.12px; widows: 1; word-spacing: 2.4px;\"><font color=\"#000000\">1. ASCII码</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px; font-family: Georgia, serif; letter-spacing: -0.12px; widows: 1; word-spacing: 2.4px;\"><font color=\"#000000\">我们知道，在计算机内部，所有的信息最终都表示为一个二进制的字符串。每一个二进制位（bit）有0和1两种状态，因此八个二进制位就可以组合出256种状态，这被称为一个字节（byte）。也就是说，一个字节一共可以用来表示256种不同的状态，每一个状态对应一个符号，就是256个符号，从0000000到11111111。</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px; font-family: Georgia, serif; letter-spacing: -0.12px; widows: 1; word-spacing: 2.4px;\"><font color=\"#000000\">上个世纪60年代，美国制定了一套字符编码，对英语字符与二进制位之间的关系，做了统一规定。这被称为ASCII码，一直沿用至今。</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px; font-family: Georgia, serif; letter-spacing: -0.12px; widows: 1; word-spacing: 2.4px;\"><font color=\"#000000\">ASCII码一共规定了128个字符的编码，比如空格\"SPACE\"是32（二进制00100000），大写的字母A是65（二进制01000001）。这128个符号（包括32个不能打印出来的控制符号），只占用了一个字节的后面7位，最前面的1位统一规定为0。</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px; font-family: Georgia, serif; letter-spacing: -0.12px; widows: 1; word-spacing: 2.4px;\"><font color=\"#000000\">2、非ASCII编码</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px; font-family: Georgia, serif; letter-spacing: -0.12px; widows: 1; word-spacing: 2.4px;\"><font color=\"#000000\">英语用128个符号编码就够了，但是用来表示其他语言，128个符号是不够的。比如，在法语中，字母上方有注音符号，它就无法用ASCII码表示。于是，一些欧洲国家就决定，利用字节中闲置的最高位编入新的符号。比如，法语中的é的编码为130（二进制10000010）。这样一来，这些欧洲国家使用的编码体系，可以表示最多256个符号。</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px; font-family: Georgia, serif; letter-spacing: -0.12px; widows: 1; word-spacing: 2.4px;\"><font color=\"#000000\">但是，这里又出现了新的问题。不同的国家有不同的字母，因此，哪怕它们都使用256个符号的编码方式，代表的字母却不一样。比如，130在法语编码中代表了é，在希伯来语编码中却代表了字母Gimel (ג)，在俄语编码中又会代表另一个符号。但是不管怎样，所有这些编码方式中，0--127表示的符号是一样的，不一样的只是128--255的这一段。</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px; font-family: Georgia, serif; letter-spacing: -0.12px; widows: 1; word-spacing: 2.4px;\"><font color=\"#000000\">至于亚洲国家的文字，使用的符号就更多了，汉字就多达10万左右。一个字节只能表示256种符号，肯定是不够的，就必须使用多个字节表达一个符号。比如，简体中文常见的编码方式是GB2312，使用两个字节表示一个汉字，所以理论上最多可以表示256x256=65536个符号。</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px; font-family: Georgia, serif; letter-spacing: -0.12px; widows: 1; word-spacing: 2.4px;\"><font color=\"#000000\">中文编码的问题需要专文讨论，这篇笔记不涉及。这里只指出，虽然都是用多个字节表示一个符号，但是GB类的汉字编码与后文的Unicode和UTF-8是毫无关系的。</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px; font-family: Georgia, serif; letter-spacing: -0.12px; widows: 1; word-spacing: 2.4px;\"><font color=\"#000000\">3.Unicode</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px; font-family: Georgia, serif; letter-spacing: -0.12px; widows: 1; word-spacing: 2.4px;\"><font color=\"#000000\">正如上一节所说，世界上存在着多种编码方式，同一个二进制数字可以被解释成不同的符号。因此，要想打开一个文本文件，就必须知道它的编码方式，否则用错误的编码方式解读，就会出现乱码。为什么电子邮件常常出现乱码？就是因为发信人和收信人使用的编码方式不一样。</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px; font-family: Georgia, serif; letter-spacing: -0.12px; widows: 1; word-spacing: 2.4px;\"><font color=\"#000000\">可以想象，如果有一种编码，将世界上所有的符号都纳入其中。每一个符号都给予一个独一无二的编码，那么乱码问题就会消失。这就是Unicode，就像它的名字都表示的，这是一种所有符号的编码。</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px; font-family: Georgia, serif; letter-spacing: -0.12px; widows: 1; word-spacing: 2.4px;\"><font color=\"#000000\">Unicode当然是一个很大的集合，现在的规模可以容纳100多万个符号。每个符号的编码都不一样，比如，U+0639表示阿拉伯字母Ain，U+0041表示英语的大写字母A，U+4E25表示汉字\"严\"。具体的符号对应表，可以查询<a href=\"http://www.unicode.org/\" target=\"_blank\" style=\"margin: 0px; padding: 0px; list-style-type: none; border: none;\">unicode.org</a>，或者专门的<a href=\"http://www.chi2ko.com/tool/CJK.htm\" target=\"_blank\" style=\"margin: 0px; padding: 0px; list-style-type: none; border: none;\">汉字对应表</a>。</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px; font-family: Georgia, serif; letter-spacing: -0.12px; widows: 1; word-spacing: 2.4px;\"><font color=\"#000000\">4. Unicode的问题</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px; font-family: Georgia, serif; letter-spacing: -0.12px; widows: 1; word-spacing: 2.4px;\"><font color=\"#000000\">需要注意的是，Unicode只是一个符号集，它只规定了符号的二进制代码，却没有规定这个二进制代码应该如何存储。</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px; font-family: Georgia, serif; letter-spacing: -0.12px; widows: 1; word-spacing: 2.4px;\"><font color=\"#000000\">比如，汉字\"严\"的unicode是十六进制数4E25，转换成二进制数足足有15位（100111000100101），也就是说这个符号的表示至少需要2个字节。表示其他更大的符号，可能需要3个字节或者4个字节，甚至更多。</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px; font-family: Georgia, serif; letter-spacing: -0.12px; widows: 1; word-spacing: 2.4px;\"><font color=\"#000000\">这里就有两个严重的问题，第一个问题是，如何才能区别Unicode和ASCII？计算机怎么知道三个字节表示一个符号，而不是分别表示三个符号呢？第二个问题是，我们已经知道，英文字母只用一个字节表示就够了，如果Unicode统一规定，每个符号用三个或四个字节表示，那么每个英文字母前都必然有二到三个字节是0，这对于存储来说是极大的浪费，文本文件的大小会因此大出二三倍，这是无法接受的。</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px; font-family: Georgia, serif; letter-spacing: -0.12px; widows: 1; word-spacing: 2.4px;\"><font color=\"#000000\">它们造成的结果是：1）出现了Unicode的多种存储方式，也就是说有许多种不同的二进制格式，可以用来表示Unicode。2）Unicode在很长一段时间内无法推广，直到互联网的出现。</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px; font-family: Georgia, serif; letter-spacing: -0.12px; widows: 1; word-spacing: 2.4px;\"><font color=\"#000000\">5.UTF-8</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px; font-family: Georgia, serif; letter-spacing: -0.12px; widows: 1; word-spacing: 2.4px;\"><font color=\"#000000\">互联网的普及，强烈要求出现一种统一的编码方式。UTF-8就是在互联网上使用最广的一种Unicode的实现方式。其他实现方式还包括UTF-16（字符用两个字节或四个字节表示）和UTF-32（字符用四个字节表示），不过在互联网上基本不用。重复一遍，这里的关系是，UTF-8是Unicode的实现方式之一。</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px; font-family: Georgia, serif; letter-spacing: -0.12px; widows: 1; word-spacing: 2.4px;\"><font color=\"#000000\">UTF-8最大的一个特点，就是它是一种变长的编码方式。它可以使用1~4个字节表示一个符号，根据不同的符号而变化字节长度。</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px; font-family: Georgia, serif; letter-spacing: -0.12px; widows: 1; word-spacing: 2.4px;\"><font color=\"#000000\">UTF-8的编码规则很简单，只有二条：</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px; font-family: Georgia, serif; letter-spacing: -0.12px; widows: 1; word-spacing: 2.4px;\"><font color=\"#000000\">1）对于单字节的符号，字节的第一位设为0，后面7位为这个符号的unicode码。因此对于英语字母，UTF-8编码和ASCII码是相同的。</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px; font-family: Georgia, serif; letter-spacing: -0.12px; widows: 1; word-spacing: 2.4px;\"><font color=\"#000000\">2）对于n字节的符号（n&gt;1），第一个字节的前n位都设为1，第n+1位设为0，后面字节的前两位一律设为10。剩下的没有提及的二进制位，全部为这个符号的unicode码。</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px; font-family: Georgia, serif; letter-spacing: -0.12px; widows: 1; word-spacing: 2.4px;\"><font color=\"#000000\">下表总结了编码规则，字母x表示可用编码的位。</font></p><blockquote style=\"margin: 2em; padding: 1em; list-style-type: none; border-width: 0.3em; border-top-style: solid; border-right-style: solid; border-bottom-style: solid; border-color: rgb(224, 223, 204); border-top-left-radius: 1em; border-top-right-radius: 1em; border-bottom-right-radius: 1em; border-bottom-left-radius: 1em; font-family: Consolas, Monaco, 'Andale Mono', monospace; overflow: auto; letter-spacing: -0.12px; line-height: 21.6px; widows: 1; word-spacing: 2.4px;\"><div style=\"margin: 0px; padding: 0px; list-style-type: none; border: none;\"><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px;\"><font color=\"#000000\">Unicode符号范围 | UTF-8编码方式<br>(十六进制) | （二进制）<br>--------------------+---------------------------------------------<br>0000 0000-0000 007F | 0xxxxxxx<br>0000 0080-0000 07FF | 110xxxxx 10xxxxxx<br>0000 0800-0000 FFFF | 1110xxxx 10xxxxxx 10xxxxxx<br>0001 0000-0010 FFFF | 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx</font></p></div></blockquote><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px; font-family: Georgia, serif; letter-spacing: -0.12px; widows: 1; word-spacing: 2.4px;\"><font color=\"#000000\">跟据上表，解读UTF-8编码非常简单。如果一个字节的第一位是0，则这个字节单独就是一个字符；如果第一位是1，则连续有多少个1，就表示当前字符占用多少个字节。</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px; font-family: Georgia, serif; letter-spacing: -0.12px; widows: 1; word-spacing: 2.4px;\"><font color=\"#000000\">下面，还是以汉字\"严\"为例，演示如何实现UTF-8编码。</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px; font-family: Georgia, serif; letter-spacing: -0.12px; widows: 1; word-spacing: 2.4px;\"><font color=\"#000000\">已知\"严\"的unicode是4E25（100111000100101），根据上表，可以发现4E25处在第三行的范围内（0000 0800-0000 FFFF），因此\"严\"的UTF-8编码需要三个字节，即格式是\"1110xxxx 10xxxxxx 10xxxxxx\"。然后，从\"严\"的最后一个二进制位开始，依次从后向前填入格式中的x，多出的位补0。这样就得到了，\"严\"的UTF-8编码是\"11100100 10111000 10100101\"，转换成十六进制就是E4B8A5。</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px; font-family: Georgia, serif; letter-spacing: -0.12px; widows: 1; word-spacing: 2.4px;\"><font color=\"#000000\">6. Unicode与UTF-8之间的转换</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px; font-family: Georgia, serif; letter-spacing: -0.12px; widows: 1; word-spacing: 2.4px;\"><font color=\"#000000\">通过上一节的例子，可以看到\"严\"的Unicode码是4E25，UTF-8编码是E4B8A5，两者是不一样的。它们之间的转换可以通过程序实现。</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px; font-family: Georgia, serif; letter-spacing: -0.12px; widows: 1; word-spacing: 2.4px;\"><font color=\"#000000\">在Windows平台下，有一个最简单的转化方法，就是使用内置的记事本小程序Notepad.exe。打开文件后，点击\"文件\"菜单中的\"另存为\"命令，会跳出一个对话框，在最底部有一个\"编码\"的下拉条。</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px; font-family: Georgia, serif; letter-spacing: -0.12px; widows: 1; word-spacing: 2.4px;\"><a href=\"http://www.ruanyifeng.com/blog/2007/10/bg2007102801.jpg\" target=\"_blank\" style=\"margin: 0px; padding: 0px; list-style-type: none; border: none;\"><font color=\"#000000\"><img alt=\"bg2007102801.jpg\" src=\"quiver-image-url/1B44BBCF586901E5872713ADA6806C46.jpg\" width=\"500\" height=\"227\" style=\"margin: 0px; padding: 0px; list-style-type: none; text-decoration: none; border: 0.3em solid rgb(224, 223, 204); border-top-left-radius: 1em; border-top-right-radius: 1em; border-bottom-right-radius: 1em; border-bottom-left-radius: 1em;\"></font></a></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px; font-family: Georgia, serif; letter-spacing: -0.12px; widows: 1; word-spacing: 2.4px;\"><font color=\"#000000\">里面有四个选项：ANSI，Unicode，Unicode big endian 和 UTF-8。</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px; font-family: Georgia, serif; letter-spacing: -0.12px; widows: 1; word-spacing: 2.4px;\"><font color=\"#000000\">1）ANSI是默认的编码方式。对于英文文件是ASCII编码，对于简体中文文件是GB2312编码（只针对Windows简体中文版，如果是繁体中文版会采用Big5码）。</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px; font-family: Georgia, serif; letter-spacing: -0.12px; widows: 1; word-spacing: 2.4px;\"><font color=\"#000000\">2）Unicode编码指的是UCS-2编码方式，即直接用两个字节存入字符的Unicode码。这个选项用的little endian格式。</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px; font-family: Georgia, serif; letter-spacing: -0.12px; widows: 1; word-spacing: 2.4px;\"><font color=\"#000000\">3）Unicode big endian编码与上一个选项相对应。我在下一节会解释little endian和big endian的涵义。</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px; font-family: Georgia, serif; letter-spacing: -0.12px; widows: 1; word-spacing: 2.4px;\"><font color=\"#000000\">4）UTF-8编码，也就是上一节谈到的编码方法。</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px; font-family: Georgia, serif; letter-spacing: -0.12px; widows: 1; word-spacing: 2.4px;\"><font color=\"#000000\">选择完\"编码方式\"后，点击\"保存\"按钮，文件的编码方式就立刻转换好了。</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px; font-family: Georgia, serif; letter-spacing: -0.12px; widows: 1; word-spacing: 2.4px;\"><font color=\"#000000\">7. Little endian和Big endian</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px; font-family: Georgia, serif; letter-spacing: -0.12px; widows: 1; word-spacing: 2.4px;\"><font color=\"#000000\">上一节已经提到，Unicode码可以采用UCS-2格式直接存储。以汉字\"严\"为例，Unicode码是4E25，需要用两个字节存储，一个字节是4E，另一个字节是25。存储的时候，4E在前，25在后，就是Big endian方式；25在前，4E在后，就是Little endian方式。</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px; font-family: Georgia, serif; letter-spacing: -0.12px; widows: 1; word-spacing: 2.4px;\"><font color=\"#000000\">这两个古怪的名称来自英国作家斯威夫特的《格列佛游记》。在该书中，小人国里爆发了内战，战争起因是人们争论，吃鸡蛋时究竟是从大头(Big-Endian)敲开还是从小头(Little-Endian)敲开。为了这件事情，前后爆发了六次战争，一个皇帝送了命，另一个皇帝丢了王位。</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px; font-family: Georgia, serif; letter-spacing: -0.12px; widows: 1; word-spacing: 2.4px;\"><font color=\"#000000\">因此，第一个字节在前，就是\"大头方式\"（Big endian），第二个字节在前就是\"小头方式\"（Little endian）。</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px; font-family: Georgia, serif; letter-spacing: -0.12px; widows: 1; word-spacing: 2.4px;\"><font color=\"#000000\">那么很自然的，就会出现一个问题：计算机怎么知道某一个文件到底采用哪一种方式编码？</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px; font-family: Georgia, serif; letter-spacing: -0.12px; widows: 1; word-spacing: 2.4px;\"><font color=\"#000000\">Unicode规范中定义，每一个文件的最前面分别加入一个表示编码顺序的字符，这个字符的名字叫做\"零宽度非换行空格\"（ZERO WIDTH NO-BREAK SPACE），用FEFF表示。这正好是两个字节，而且FF比FE大1。</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px; font-family: Georgia, serif; letter-spacing: -0.12px; widows: 1; word-spacing: 2.4px;\"><font color=\"#000000\">如果一个文本文件的头两个字节是FE FF，就表示该文件采用大头方式；如果头两个字节是FF FE，就表示该文件采用小头方式。</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px; font-family: Georgia, serif; letter-spacing: -0.12px; widows: 1; word-spacing: 2.4px;\"><font color=\"#000000\">8. 实例</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px; font-family: Georgia, serif; letter-spacing: -0.12px; widows: 1; word-spacing: 2.4px;\"><font color=\"#000000\">下面，举一个实例。</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px; font-family: Georgia, serif; letter-spacing: -0.12px; widows: 1; word-spacing: 2.4px;\"><font color=\"#000000\">打开\"记事本\"程序Notepad.exe，新建一个文本文件，内容就是一个\"严\"字，依次采用ANSI，Unicode，Unicode big endian 和 UTF-8编码方式保存。</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px; font-family: Georgia, serif; letter-spacing: -0.12px; widows: 1; word-spacing: 2.4px;\"><font color=\"#000000\">然后，用文本编辑软件<a href=\"http://www.google.cn/search?aq=t&amp;oq=UltraEdit&amp;complete=1&amp;hl=zh-CN&amp;newwindow=1&amp;rlz=1B3GGGL_zh-CNCN216CN216&amp;q=ultraedit+%E4%B8%8B%E8%BD%BD&amp;btnG=Google+%E6%90%9C%E7%B4%A2&amp;meta=\" target=\"_blank\" style=\"margin: 0px; padding: 0px; list-style-type: none; border: none;\">UltraEdit中</a>的\"十六进制功能\"，观察该文件的内部编码方式。</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px; font-family: Georgia, serif; letter-spacing: -0.12px; widows: 1; word-spacing: 2.4px;\"><font color=\"#000000\">1）ANSI：文件的编码就是两个字节\"D1 CF\"，这正是\"严\"的GB2312编码，这也暗示GB2312是采用大头方式存储的。</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px; font-family: Georgia, serif; letter-spacing: -0.12px; widows: 1; word-spacing: 2.4px;\"><font color=\"#000000\">2）Unicode：编码是四个字节\"FF FE 25 4E\"，其中\"FF FE\"表明是小头方式存储，真正的编码是4E25。</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px; font-family: Georgia, serif; letter-spacing: -0.12px; widows: 1; word-spacing: 2.4px;\"><font color=\"#000000\">3）Unicode big endian：编码是四个字节\"FE FF 4E 25\"，其中\"FE FF\"表明是大头方式存储。</font></p><p style=\"margin: 1em 0px 0px 0.8em; padding: 0px; list-style-type: none; border: none; line-height: 28.8px; font-family: Georgia, serif; letter-spacing: -0.12px; widows: 1; word-spacing: 2.4px;\"><font color=\"#000000\">4）UTF-8：编码是六个字节\"EF BB BF E4 B8 A5\"，前三个字节\"EF BB BF\"表示这是UTF-8编码，后三个\"E4B8A5\"就是\"严\"的具体编码，它的存储顺序与编码顺序是一致的。</font></p>"
    }
  ]
}