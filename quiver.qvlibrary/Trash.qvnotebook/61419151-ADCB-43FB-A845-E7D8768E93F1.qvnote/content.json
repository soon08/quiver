{
  "title": "HTTP包",
  "cells": [
    {
      "type": "text",
      "data": "<div class=\"title_canvas\" style=\"margin: 0px; padding: 0px; border: 0px; display: flex; flex-flow: row nowrap; justify-content: space-between; align-items: center; color: rgb(0, 0, 0); font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-size: 14px; font-variant-ligatures: normal; line-height: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><h1 style=\"margin: 0px; padding: 0px 20px 0px 0px; font-size: 22px; font-weight: 500; border: 0px; float: left; clear: both; width: 849px; color: rgb(34, 34, 34); line-height: 1.4em;\"><span style=\"color: rgb(0, 0, 0); font-size: 14px;\">现在市面上有很多高并发服务器，Nginx就是一个领军人物，也是我们仰望的存在；Nginx+Lua这种组合也是高并发服务器的一个代表；PHP语言作为Nginx+FastCGI上一个优秀的解释语言也占据大半江山。而如今的Golang也作为高并发服务器语言横空出世，因其“语法简单、代码结构简明，维护成本还低，天生高并发”等特性而被广泛应用，尤其是各种云服务，还有Docker也是用Golang来做实现语言。</span><br></h1></div><div class=\"article_page_left text_content_container\" style=\"margin: 0px; padding: 0px; border: 0px; float: left; width: 610px; color: rgb(0, 0, 0); font-family: 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'Microsoft YaHei', 微软雅黑, STHeiti, 'WenQuanYi Micro Hei', SimSun, Helvetica, sans-serif; font-size: 14px; font-variant-ligatures: normal; line-height: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><div class=\"text_info text_info_article\" style=\"margin: 10px 0px; padding: 0px; border: 0px; float: left; clear: both; width: 610px; line-height: 1.8;\"><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">接着我们介绍下服务器编程模型，只从线程的角度，不谈并发模型。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">从线程的角度，可以分为“单线程”，“多线程”2种。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">单线程：</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">整个进程只有一个线程，因为只有一个线程的缘故，当请求来的时候只能一个个按照顺序处理，要想实现高性能只能用“non-blocking IO + IO multiplexing”组合 (非阻塞io + io复用)。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Nginx采用的就是多进程 + 单线程( 非阻塞io+io复用)模式。</p><div id=\"lowerFullwidthVCR\" style=\"margin: 0px; padding: 0px; border: 0px;\"></div><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">多线程：</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">进程有多个线程，多个线程就不好控制，还带来一些问题：锁竞争，数据污染、山下文切换带来的开销，但是可以充分利用CPU。要实现高性能也是“non-blocking IO + IO multiplexing”组合。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">所以，其实不管单线程还是多线程都是要用“non-blocking IO + IO multiplexing”组合的。还有一种用户级线程，整个线程的库都是自己维护，“创建，撤销，切换”，内核是不知道用户级线程存在的，缺点是阻塞时会阻塞整个进程。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">其实想实现高并发服务器最好用单线程(不处理逻辑的情况下)，节省很多上下文切换开销(CPU分配时间片给任务，CPU加载上下文)，但一定要采用io上“非阻塞和异步”。因为多线程很难控制，锁，数据依赖，不同场景会让多线程变成串行，控制起来相当繁琐，牺牲很多并发性能(Golang采用的抢占式调度)，但正常情况下多线程还是挺不错的。下面我们说下Golang实现的高并发。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">在Golang的调度器里用的也是“csp”并发模型，有3个重要的概念P、M、G。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">P是Processor，G是Goroutine，M是Machine。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">简述：M是执行G的机器线程，跟P绑定才可以执行，P存放G的队列。看到这里大家会问到刚刚不是说多线程切换上下文开销很大吗？其实每个M都有一个g0栈内存，用来执行运行时管理命令。调度时候M的g0会从每个G栈取出栈(现场)，调度之后再保存到G，这样不同的M就可以接着调度了。所有上下文都是自己在切换，省去了内核带来的开销，而且Golang会观察，长时间不调度的G会被其他G抢占(抢占调度其实就是一个标记)。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">采用异步的方式运行G，这样就实现了并发(M可不止一个啊，感兴趣看下<a href=\"http://item.jd.com/11573034.html\" style=\"text-decoration: none; color: rgb(40, 106, 178); outline: none !important; margin: 0px; border: 0px; padding: 0px;\">Go并发实战</a>。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">看到上面估计大家可能稍微了解点Golang的优势了吧。不要担心GC问题，选择场景问题。</p><h2 style=\"margin: 0px 0px 10px; padding: 0px; font-size: 20px; font-weight: normal; border: 0px; float: none; clear: none; width: 610px; color: rgb(34, 34, 34); line-height: 24px;\">实战</h2><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">现在我们进入实战部分，手把手教你实现CGI，FastCGI，HTTP服务器，主要是用Golang的HTTP包。TCP实战就不在这次说了，TCP其实是块难啃的骨头，简单的几乎话说不清楚，如果是简单写一个“hello world”的例子，让大家似懂非懂的，不如单独开篇讲解一下，从Tcp 到 Protobuf 再到RPC，然后写一个稍微复杂点的tcp服务器，我们也可以处理下“粘包，丢包”等问题(Protobuf解决或者做一个分包算法)，如果简单的demo可能会导致你丢失兴趣的。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">首先了解什么是CGI？CGI和FastCGI的区别是什么？</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">CGI：全拼(Common Gateway Interface)是能让web服务器和CGI脚本共同处理客户的请求的协议。Web服务器把请求转成CGI脚本，CGI脚本执行回复Web服务器，Web服务回复给客户端。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">CGI fork一个新的进程来执行，读取参数，处理数据，然后就结束生命期。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">FastCGI采用tcp链接，不用fork新的进程，因为程序启动的时候就已经开启了，等待数据的到来，处理数据。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">看出来差距在哪里了吧？就是CGI每次都要fork进程，这个开销很大的。（感兴趣的看下linux进程相关知识）。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">现在我们来做我们的CGI服务器</p><h2 style=\"margin: 0px 0px 10px; padding: 0px; font-size: 20px; font-weight: normal; border: 0px; float: none; clear: none; width: 610px; color: rgb(34, 34, 34); line-height: 24px;\">CGI服务器</h2><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">需要用到的包：</p><pre class=\" language-go\" style=\"margin-top: 0.5em; margin-bottom: 0.5em; padding: 0.5em; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; line-height: 1.5; width: 597.797px; overflow: auto; clear: none; text-shadow: white 0px 1px; direction: ltr; word-spacing: normal; word-break: normal; word-wrap: normal; tab-size: 4; z-index: 1000; position: relative; background-color: rgb(245, 242, 240); float: none !important; background-position: initial initial; background-repeat: initial initial;\"><code class=\" language-go\" style=\"text-shadow: white 0px 1px; font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; direction: ltr; word-spacing: normal; word-wrap: normal; line-height: 1.5; tab-size: 4; z-index: 1000;\"><span class=\"token string\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">\"net/http/cgi\"</span>\n<span class=\"token string\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">\"net/http\"</span></code></pre><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">简单的2个包就可以实现CGI服务器了。“高秀敏：准备好了吗？希望别看到老头子他又错了的场景啊”。我们按照“代码-&gt;讲解”的流程，先运行在讲解。</p><pre class=\" language-go\" style=\"margin-top: 0.5em; margin-bottom: 0.5em; padding: 0.5em; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; line-height: 1.5; width: 597.797px; overflow: auto; clear: none; text-shadow: white 0px 1px; direction: ltr; word-spacing: normal; word-break: normal; word-wrap: normal; tab-size: 4; z-index: 1000; position: relative; background-color: rgb(245, 242, 240); float: none !important; background-position: initial initial; background-repeat: initial initial;\"><code class=\" language-go\" style=\"text-shadow: white 0px 1px; font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; direction: ltr; word-spacing: normal; word-wrap: normal; line-height: 1.5; tab-size: 4; z-index: 1000;\"> <span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">package</span> main<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">;</span>\n    <span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">import</span> <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>\n       <span class=\"token string\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">\"net/http/cgi\"</span>\n       <span class=\"token string\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">\"fmt\"</span>\n       <span class=\"token string\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">\"net/http\"</span>\n    <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span>\n    \n    <span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">funcmain</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">{</span>\n        http<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">HandleFunc</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token string\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">\"/\"</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span> <span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">func</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>w http<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span>ResponseWriter<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span> r <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">*</span>http<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span>Request<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">{</span>\n            handler <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">:=</span> <span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">new</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>cgi<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span>Handler<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">;</span>\n            handler<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span>Path <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">=</span> <span class=\"token string\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">\"/usr/local/go/bin/go\"</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">;</span>\n            script <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">:=</span> <span class=\"token string\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">\"/Users/liujinlong/cgi-script\"</span> <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">+</span> r<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span>URL<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span>Path<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">;</span>\n            fmt<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">Println</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>handler<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span>Path<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">;</span>\n            handler<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span>Dir <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">=</span> <span class=\"token string\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">\"/Users/liujinlong/cgi-script\"</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">;</span>\n            args <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">:=</span> <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">[</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">]</span><span class=\"token builtin\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">string</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">{</span><span class=\"token string\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">\"run\"</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span> script<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">}</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">;</span>\n            handler<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span>Args <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">=</span> <span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">append</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>handler<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span>Args<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span> args<span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">...</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">;</span>\n            fmt<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">Println</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>handler<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span>Args<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">;</span>\n    \n            handler<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">ServeHTTP</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>w<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span> r<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">;</span>\n       <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">}</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">;</span>\n    http<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">ListenAndServe</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token string\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">\":8989\"</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span><span class=\"token boolean\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 0, 85);\">nil</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">;</span>\n    <span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">select</span> <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">{</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">}</span><span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">//阻塞进程</span>\n    <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">}</span>\n    test<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span><span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">go</span>\n    <span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">package</span> main\n    \n    <span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">import</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>\n        <span class=\"token string\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">\"fmt\"</span>\n    <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span>\n    \n    <span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">funcinit</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">{</span>\n        fmt<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">Print</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token string\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">\"Content-Type: text/plain;charset=utf-8\\n\\n\"</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">;</span>\n    <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">}</span>\n    \n    <span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">funcmain</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">{</span>\n        fmt<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">Println</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token string\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">\"hello!!!!\"</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span>\n    <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">}</span></code></pre><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">看来我们成功了。来看下net/http/cgi的包。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\"><img _href=\"img://null\" _p=\"true\" src=\"quiver-image-url/FA9FA05C04D4C02017990D3E7B8B754A.png\" width=\"550\" style=\"border: 0px; margin: 0px 10px 10px 0px; padding: 0px;\"></p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">先看host.go，这里有一个重要的结构Handler。</p><pre class=\" language-go\" style=\"margin-top: 0.5em; margin-bottom: 0.5em; padding: 0.5em; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; line-height: 1.5; width: 597.797px; overflow: auto; clear: none; text-shadow: white 0px 1px; direction: ltr; word-spacing: normal; word-break: normal; word-wrap: normal; tab-size: 4; z-index: 1000; position: relative; background-color: rgb(245, 242, 240); float: none !important; background-position: initial initial; background-repeat: initial initial;\"><code class=\" language-go\" style=\"text-shadow: white 0px 1px; font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; direction: ltr; word-spacing: normal; word-wrap: normal; line-height: 1.5; tab-size: 4; z-index: 1000;\">  <span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">// Handler runs an executable in a subprocess with a CGI environment.</span>\n    <span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">type</span> Handler <span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">struct</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">{</span>\n       Path <span class=\"token builtin\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">string</span> <span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">// 执行程序</span>\n       Root <span class=\"token builtin\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">string</span> <span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">// 处理url的根，为空的时候“/”</span>\n       Dir <span class=\"token builtin\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">string</span>         <span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">//目录</span>\n       Env        <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">[</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">]</span><span class=\"token builtin\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">string</span>    <span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">// 环境变量</span>\n       InheritEnv <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">[</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">]</span><span class=\"token builtin\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">string</span>    <span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">//集成环境变量</span>\n       Logger     <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">*</span>log<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span>Logger<span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">// 日志</span>\n       Args       <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">[</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">]</span><span class=\"token builtin\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">string</span>    <span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">//参数</span>\n       PathLocationHandlerhttp<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span>Handler <span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">//http包的handler宿主</span>\n    <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">}</span>\n\n    <span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">func</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>h <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">*</span>Handler<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> <span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">ServeHTTP</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>rwhttp<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span>ResponseWriter<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span> req <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">*</span>http<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span>Request<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span></code></pre><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">它也实现了ServeHttp，所有请求都会调用这个，这个后面分析HTTP源码的时候回详细讲解它是做什么的。Handler是在子程序中执行CGI脚本的。</p><pre class=\" language-go\" style=\"margin-top: 0.5em; margin-bottom: 0.5em; padding: 0.5em; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; line-height: 1.5; width: 597.797px; overflow: auto; clear: none; text-shadow: white 0px 1px; direction: ltr; word-spacing: normal; word-break: normal; word-wrap: normal; tab-size: 4; z-index: 1000; position: relative; background-color: rgb(245, 242, 240); float: none !important; background-position: initial initial; background-repeat: initial initial;\"><code class=\" language-go\" style=\"text-shadow: white 0px 1px; font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; direction: ltr; word-spacing: normal; word-wrap: normal; line-height: 1.5; tab-size: 4; z-index: 1000;\"><span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">funcRequest</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">*</span>http<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span>Request<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span> <span class=\"token builtin\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">error</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span>\n<span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">funcServe</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>handler http<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span>Handler<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> \n    …</code></pre><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">先是将前端CGI请求转换成net包的HTTP请求，然后执行Handler，然后处理response。</p><h2 style=\"margin: 0px 0px 10px; padding: 0px; font-size: 20px; font-weight: normal; border: 0px; float: none; clear: none; width: 610px; color: rgb(34, 34, 34); line-height: 24px;\">FastCGI服务器</h2><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">接下来是FastCGI服务器，</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">用到的包：</p><pre class=\" language-go\" style=\"margin-top: 0.5em; margin-bottom: 0.5em; padding: 0.5em; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; line-height: 1.5; width: 597.797px; overflow: auto; clear: none; text-shadow: white 0px 1px; direction: ltr; word-spacing: normal; word-break: normal; word-wrap: normal; tab-size: 4; z-index: 1000; position: relative; background-color: rgb(245, 242, 240); float: none !important; background-position: initial initial; background-repeat: initial initial;\"><code class=\" language-go\" style=\"text-shadow: white 0px 1px; font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; direction: ltr; word-spacing: normal; word-wrap: normal; line-height: 1.5; tab-size: 4; z-index: 1000;\"><span class=\"token string\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">\"net\"</span>\n    <span class=\"token string\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">\"net/http\"</span>\n    <span class=\"token string\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">\"net/http/fcgi\"</span></code></pre><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">上面已经讲过，它是TCP的方式实现的，需要借助其他服务器来做转发，这里我们只提供代码，demo的截图讲解TCP的时候在加上。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">需要使用Nginx，我电脑上没有。各位自己测试一下</p><pre class=\" language-go\" style=\"margin-top: 0.5em; margin-bottom: 0.5em; padding: 0.5em; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; line-height: 1.5; width: 597.797px; overflow: auto; clear: none; text-shadow: white 0px 1px; direction: ltr; word-spacing: normal; word-break: normal; word-wrap: normal; tab-size: 4; z-index: 1000; position: relative; background-color: rgb(245, 242, 240); float: none !important; background-position: initial initial; background-repeat: initial initial;\"><code class=\" language-go\" style=\"text-shadow: white 0px 1px; font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; direction: ltr; word-spacing: normal; word-wrap: normal; line-height: 1.5; tab-size: 4; z-index: 1000;\">server <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">{</span>\n            listen <span class=\"token number\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 0, 85);\">80</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">;</span>\n server_name <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">*</span><span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">*</span><span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">*</span><span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">*</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">;</span>\n            <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">...</span>\n            location <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">*</span><span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">...</span> <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">{</span>\n                    include         fastcgi<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span>conf<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">;</span>\n    fastcgi_pass    <span class=\"token number\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 0, 85);\">127.0</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span><span class=\"token number\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 0, 85);\">0.1</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">:</span><span class=\"token number\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 0, 85);\">9001</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">;</span>\n            <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">}</span>\n            <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">...</span>\n    <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">}</span><span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">//…是省略，自己去写一个server。(具体谷歌)</span>\n    <span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">package</span> main\n    \n    <span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">import</span> <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>\n       <span class=\"token string\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">\"net\"</span>\n       <span class=\"token string\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">\"net/http\"</span>\n       <span class=\"token string\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">\"net/http/fcgi\"</span>\n    <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span>\n    \n    <span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">type</span> FastCGIstruct<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">{</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">}</span>\n    \n    <span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">func</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>s <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">*</span>FastCGI<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> <span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">ServeHTTP</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>resphttp<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span>ResponseWriter<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span> req <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">*</span>http<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span>Request<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">{</span>\n    resp<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">Write</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">[</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">]</span><span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">byte</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token string\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">\"Hello, fastcgi\"</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span>\n    <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">}</span>\n    \n    <span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">funcmain</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">{</span>\n       listener<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span> <span class=\"token boolean\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 0, 85);\">_</span> <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">:=</span> net<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">Listen</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token string\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">\"tcp\"</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span> <span class=\"token string\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">\"127.0.0.1:8989\"</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span>\n       srv <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">:=</span> <span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">new</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>FastCGI<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span>\n       fcgi<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">Serve</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>listener<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span> srv<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span>\n    <span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">select</span> <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">{</span>\n    \n       <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">}</span>\n    <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">}</span></code></pre><h2 style=\"margin: 0px 0px 10px; padding: 0px; font-size: 20px; font-weight: normal; border: 0px; float: none; clear: none; width: 610px; color: rgb(34, 34, 34); line-height: 24px;\">HTTP服务器</h2><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">接下来就是重点了，我们的HTTP服务器，这个大家都不陌生，HTTP是最常用的方式之一，通用性很强，跨团队协作上也比较受到推荐，排查问题也相对来说简单。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">我们接下来以3种方式来展现Golang的HTTP服务器的简洁和强大。</p><ol style=\"margin: 10px 0px 10px 10px; padding: 0px 0px 0px 20px; border: 0px; width: 549px; clear: left;\"><li style=\"margin: 4px 0px; padding: 0px 0px 0px 10px; border: none; float: none; clear: none; text-align: left;\">写一个简单的HTTP服务器</li><li style=\"margin: 4px 0px; padding: 0px 0px 0px 10px; border: none; float: none; clear: none; text-align: left;\">写一个稍微复杂带路由的HTTP服务器</li><li style=\"margin: 4px 0px; padding: 0px 0px 0px 10px; border: none; float: none; clear: none; text-align: left;\">分析源码，然后实现一个自定义Handler的服务器</li></ol><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">然后我们对照net/http包来进行源码分析，加强对http包的理解。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">1、写一个简单的HTTP服务器：</p><pre class=\" language-go\" style=\"margin-top: 0.5em; margin-bottom: 0.5em; padding: 0.5em; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; line-height: 1.5; width: 597.797px; overflow: auto; clear: none; text-shadow: white 0px 1px; direction: ltr; word-spacing: normal; word-break: normal; word-wrap: normal; tab-size: 4; z-index: 1000; position: relative; background-color: rgb(245, 242, 240); float: none !important; background-position: initial initial; background-repeat: initial initial;\"><code class=\" language-go\" style=\"text-shadow: white 0px 1px; font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; direction: ltr; word-spacing: normal; word-wrap: normal; line-height: 1.5; tab-size: 4; z-index: 1000;\"><span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">package</span> main<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">;</span>\n    \n    <span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">import</span> <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>\n        <span class=\"token string\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">\"net/http\"</span>\n    <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span>\n    \n    <span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">funchello</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>w http<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span>ResponseWriter<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span> req <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">*</span>http<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span>Request<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">{</span>\n        w<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">Write</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">[</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">]</span><span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">byte</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token string\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">\"Hello\"</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span>\n    <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">}</span>\n    <span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">funcsay</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>w http<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span>ResponseWriter<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span> req <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">*</span>http<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span>Request<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">{</span>\n        w<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">Write</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">[</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">]</span><span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">byte</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token string\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">\"Hello\"</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span>\n    <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">}</span>\n    <span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">funcmain</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">{</span>\n        http<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">HandleFunc</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token string\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">\"/hello\"</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span> hello<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">;</span>\n        http<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">Handle</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token string\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">\"/handle\"</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span>http<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">HandlerFunc</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>say<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">;</span>\n        http<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">ListenAndServe</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token string\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">\":8001\"</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span> <span class=\"token boolean\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 0, 85);\">nil</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">;</span>\n        <span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">select</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">{</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">}</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">;</span><span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">//阻塞进程</span>\n    <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">}</span></code></pre><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\"><img _href=\"img://null\" _p=\"true\" src=\"quiver-image-url/C556B18B6E41A8B8F2FF2DD472D1F238.png\" width=\"550\" style=\"border: 0px; margin: 0px 10px 10px 0px; padding: 0px;\"></p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\"><img _href=\"img://null\" _p=\"true\" src=\"quiver-image-url/71F413EA3295D29F3561691271806DB9.png\" width=\"550\" style=\"border: 0px; margin: 0px 10px 10px 0px; padding: 0px;\"></p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">是不是很简单，我用2种方式演示了这个例子，HandleFunc和Handle方式不同，却都能实现一个路由的监听，其实很简单，但是很多人看到这都会有疑惑，别着急，咱们源码分析的时候你会看到。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">2、写一个稍微复杂带路由的HTTP服务器：</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">对着上面的例子想一个问题，我们在开发中会遇到很多问题，比如handle/res，handle/rsa…等等路由，这两个路由接受的参数都不一样，我们应该怎么写。我先来个图展示下运行结果。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\"><img _href=\"img://null\" _p=\"true\" src=\"quiver-image-url/7B4FF8CA7CFFDDA7FDE048D51DF9ACB5.png\" width=\"550\" style=\"border: 0px; margin: 0px 10px 10px 0px; padding: 0px;\"></p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">是不是挺惊讶的，404了，路由没有匹配到。可是我们写handle这个路由了。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">问题：</p><ol style=\"margin: 10px 0px 10px 10px; padding: 0px 0px 0px 20px; border: 0px; width: 549px; clear: left;\"><li style=\"margin: 4px 0px; padding: 0px 0px 0px 10px; border: none; float: none; clear: none; text-align: left;\">什么原因导致的路由失效</li><li style=\"margin: 4px 0px; padding: 0px 0px 0px 10px; border: none; float: none; clear: none; text-align: left;\">如何解决这种问题，做一个可以用Controller来控制的路由</li></ol><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">问题1：</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">我们在源码阅读分析的时候会解决。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">问题2：</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">我们可以设定一个控制器Handle，它有2个action，我们的执行handle/res对应的结果是调用Handle的控制器下的res方法。这样是不是很酷。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">来我们先上代码：</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">静态目录：</p><ol style=\"margin: 10px 0px 10px 10px; padding: 0px 0px 0px 20px; border: 0px; width: 549px; clear: left;\"><li style=\"margin: 4px 0px; padding: 0px 0px 0px 10px; border: none; float: none; clear: none; text-align: left;\">css</li><li style=\"margin: 4px 0px; padding: 0px 0px 0px 10px; border: none; float: none; clear: none; text-align: left;\">js</li><li style=\"margin: 4px 0px; padding: 0px 0px 0px 10px; border: none; float: none; clear: none; text-align: left;\">image</li></ol><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">静态目录很好实现，只要一个函数http.FileServer()，这个函数从文字上看就是文件服务器，他需要传递一个目录，我们常以http.Dir(\"Path\")来传递。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">其他目录大家自己实现下，我们来实现问题2，一个简单的路由。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">我们来看下代码</p><pre class=\" language-go\" style=\"margin-top: 0.5em; margin-bottom: 0.5em; padding: 0.5em; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; line-height: 1.5; width: 597.797px; overflow: auto; clear: none; text-shadow: white 0px 1px; direction: ltr; word-spacing: normal; word-break: normal; word-wrap: normal; tab-size: 4; z-index: 1000; position: relative; background-color: rgb(245, 242, 240); float: none !important; background-position: initial initial; background-repeat: initial initial;\"><code class=\" language-go\" style=\"text-shadow: white 0px 1px; font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; direction: ltr; word-spacing: normal; word-wrap: normal; line-height: 1.5; tab-size: 4; z-index: 1000;\"><span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">package</span> main<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">;</span>\n    \n    <span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">import</span> <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>\n       <span class=\"token string\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">\"net/http\"</span>\n       <span class=\"token string\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">\"strings\"</span>\n       <span class=\"token string\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">\"reflect\"</span>\n       <span class=\"token string\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">\"fmt\"</span>\n    <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span>\n    \n    <span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">funchello</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>w http<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span>ResponseWriter<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span> req <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">*</span>http<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span>Request<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">{</span>\n        w<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">Write</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">[</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">]</span><span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">byte</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token string\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">\"Hello\"</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">;</span>\n    <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">}</span>\n    \n    \n    <span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">type</span> Handlers <span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">struct</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">{</span>\n    \n    <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">}</span>\n    \n    <span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">func</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>h <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">*</span>Handlers<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> <span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">ResAction</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>w http<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span>ResponseWriter<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span> req <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">*</span>http<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span>Request<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span>  <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">{</span>\n        fmt<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">Println</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token string\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">\"res\"</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">;</span>\n        w<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">Write</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">[</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">]</span><span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">byte</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token string\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">\"res\"</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">;</span>\n    <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">}</span>\n    <span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">funcsay</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>w http<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span>ResponseWriter<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span> req <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">*</span>http<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span>Request<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">{</span>\n       pathInfo <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">:=</span> strings<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">Trim</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>req<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span>URL<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span>Path<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span> <span class=\"token string\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">\"/\"</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">;</span>\n       parts <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">:=</span> strings<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">Split</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>pathInfo<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span> <span class=\"token string\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">\"/\"</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">;</span>\n       varaction <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">=</span> <span class=\"token string\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">\"\"</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">;</span>\n       fmt<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">Println</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>strings<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">Join</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>parts<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span><span class=\"token string\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">\"|\"</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">;</span>\n       <span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">if</span> <span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">len</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>parts<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">&gt;</span><span class=\"token number\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 0, 85);\">1</span> <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">{</span>\n          action <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">=</span> strings<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">Title</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>parts<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">[</span><span class=\"token number\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 0, 85);\">1</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">]</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">+</span> <span class=\"token string\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">\"Action\"</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">;</span>\n       <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">}</span>\n       fmt<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">Println</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>action<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">;</span>\n       handle <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">:=</span> <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">&amp;</span>Handlers<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">{</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">}</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">;</span>\n       controller <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">:=</span> reflect<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">ValueOf</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>handle<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">;</span>\n       method <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">:=</span> controller<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">MethodByName</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>action<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">;</span>\n       r <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">:=</span> reflect<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">ValueOf</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>req<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">;</span>\n       wr <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">:=</span> reflect<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">ValueOf</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>w<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">;</span>\n       method<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">Call</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">[</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">]</span>reflect<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span>Value<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">{</span>wr<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span> r<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">}</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">;</span>\n    <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">}</span>\n    <span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">funcmain</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">{</span>\n        http<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">HandleFunc</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token string\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">\"/hello\"</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span> hello<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">;</span>\n        http<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">Handle</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token string\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">\"/handle/\"</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span>http<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">HandlerFunc</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>say<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">;</span>\n        http<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">ListenAndServe</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token string\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">\":8081\"</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span> <span class=\"token boolean\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 0, 85);\">nil</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">;</span>\n    <span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">select</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">{</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">}</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">;</span><span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">//阻塞进程</span>\n    <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">}</span></code></pre><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">上面代码就可以实现handle/res，handle/rsa等路由监听，把前缀相同的路由业务实现放在一个文件里，这样也可以解耦合，是不是清爽多了。其实我们可以在做的更加灵活些。在文章最后我们放出来一个流程图，按照流程图做你们就能写出一个简单的mvc路由框架。接下来看运行之后的结果。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">如下图：&nbsp;</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">(点击放大图像)</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\"><a href=\"http://cdn2.infoqstatic.com/statics_s1_20160823-0357/resource/articles/golang-standard-library-part02/zh/resources/004.png\" style=\"text-decoration: none; color: rgb(40, 106, 178); outline: none !important; margin: 0px; border: 0px; padding: 0px;\"><img _href=\"img://null\" _p=\"true\" src=\"quiver-image-url/C0B1A69AA16EC324927BADDFBFE5AB9F.png\" width=\"550\" style=\"border: 0px; margin: 0px 10px 10px 0px; padding: 0px;\"></a></p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">3、分析源码，然后实现一个自定义Handler的服务器</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">现在我们利用这个例子来分析下http包的源码(只是服务器相关的，Request我们此期不讲，简单看看就行。)</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">其实使用Golang做web服务器的方式有很多，TCP也是一种，net包就可以实现，不过此期我们不讲，因为HTTP服务器如果不懂，TCP会让你更加不明白。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">我们从入口开始，首先看main方法里的http.HandleFunc和http.Handle这个绑定路由的方法，上面一直没解释有啥区别。现在我们来看一下。</p><pre class=\" language-go\" style=\"margin-top: 0.5em; margin-bottom: 0.5em; padding: 0.5em; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; line-height: 1.5; width: 597.797px; overflow: auto; clear: none; text-shadow: white 0px 1px; direction: ltr; word-spacing: normal; word-break: normal; word-wrap: normal; tab-size: 4; z-index: 1000; position: relative; background-color: rgb(245, 242, 240); float: none !important; background-position: initial initial; background-repeat: initial initial;\"><code class=\" language-go\" style=\"text-shadow: white 0px 1px; font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; direction: ltr; word-spacing: normal; word-wrap: normal; line-height: 1.5; tab-size: 4; z-index: 1000;\"><span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">// HandleFunc registers the handler function for the given pattern</span>\n    <span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">// in the DefaultServeMux.</span>\n    <span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">// The documentation for ServeMux explains how patterns are matched.</span>\n    <span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">funcHandleFunc</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>pattern <span class=\"token builtin\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">string</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span> handler <span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">func</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>ResponseWriter<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span> <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">*</span>Request<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> \n    <span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">funcHandle</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>pattern <span class=\"token builtin\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">string</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span> handler Handler<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span></code></pre><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">Handle 和HandleFunc都是注册路由，从上面也能看出来这两个函数都是绑定注册路由函数的。如何绑定的呢？我们来看下。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">上面2个函数通过DefaultServeMux.handle，DefaultServeMux.handleFunc把pattern和HandleFunc绑定到ServeMux的Handle上。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">为什么DefaultServeMux会把路由绑定到ServeMux上呢？</p><pre class=\" language-go\" style=\"margin-top: 0.5em; margin-bottom: 0.5em; padding: 0.5em; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; line-height: 1.5; width: 597.797px; overflow: auto; clear: none; text-shadow: white 0px 1px; direction: ltr; word-spacing: normal; word-break: normal; word-wrap: normal; tab-size: 4; z-index: 1000; position: relative; background-color: rgb(245, 242, 240); float: none !important; background-position: initial initial; background-repeat: initial initial;\"><code class=\" language-go\" style=\"text-shadow: white 0px 1px; font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; direction: ltr; word-spacing: normal; word-wrap: normal; line-height: 1.5; tab-size: 4; z-index: 1000;\"><span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">// DefaultServeMux is the default ServeMux used by Serve.</span>\n    varDefaultServeMux <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">=</span> <span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">NewServeMux</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span></code></pre><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">因为DefaultServeMux就是ServeMux的实例对象。导致我们就把路由和执行方法绑注册好了。不过大家请想下handle/res的问题？</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">从上面的分析我们要知道几个重要的概念。</p><pre class=\" language-go\" style=\"margin-top: 0.5em; margin-bottom: 0.5em; padding: 0.5em; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; line-height: 1.5; width: 597.797px; overflow: auto; clear: none; text-shadow: white 0px 1px; direction: ltr; word-spacing: normal; word-break: normal; word-wrap: normal; tab-size: 4; z-index: 1000; position: relative; background-color: rgb(245, 242, 240); float: none !important; background-position: initial initial; background-repeat: initial initial;\"><code class=\" language-go\" style=\"text-shadow: white 0px 1px; font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; direction: ltr; word-spacing: normal; word-wrap: normal; line-height: 1.5; tab-size: 4; z-index: 1000;\">HandlerFunc\n\n    <span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">// The HandlerFunc type is an adapter to allow the use of</span>\n    <span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">// ordinary functions as HTTP handlers.  If f is a function</span>\n    <span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">// with the appropriate signature, HandlerFunc(f) is a</span>\n    <span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">// Handler object that calls f.</span>\n    <span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">type</span> <span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">HandlerFuncfunc</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>ResponseWriter<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span> <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">*</span>Request<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span>\n    \n    <span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">// ServeHTTP calls f(w, r).</span>\n    <span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">func</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>f HandlerFunc<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> <span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">ServeHTTP</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>w ResponseWriter<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span> r <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">*</span>Request<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">{</span>\n       <span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">f</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>w<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span> r<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span>\n    <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">}</span></code></pre><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">上面的大概意思是，定义了一个函数适配器(可以理解成函数指针)HandleFunc，通过HandlerFunc(f)来进行适配。其实调用的实体是f本身。</p><pre class=\" language-go\" style=\"margin-top: 0.5em; margin-bottom: 0.5em; padding: 0.5em; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; line-height: 1.5; width: 597.797px; overflow: auto; clear: none; text-shadow: white 0px 1px; direction: ltr; word-spacing: normal; word-break: normal; word-wrap: normal; tab-size: 4; z-index: 1000; position: relative; background-color: rgb(245, 242, 240); float: none !important; background-position: initial initial; background-repeat: initial initial;\"><code class=\" language-go\" style=\"text-shadow: white 0px 1px; font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; direction: ltr; word-spacing: normal; word-wrap: normal; line-height: 1.5; tab-size: 4; z-index: 1000;\"><span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">package</span> main\n    <span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">import</span> <span class=\"token string\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">\"fmt\"</span>\n    <span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">type</span> A <span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">func</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token builtin\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">int</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span> <span class=\"token builtin\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">int</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span>\n    <span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">func</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>f A<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span><span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">Serve</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">{</span>\n        fmt<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">Println</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token string\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">\"serve2\"</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span>\n    <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">}</span>\n    <span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">funcserve</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token builtin\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">int</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span><span class=\"token builtin\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">int</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">{</span>\n        fmt<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">Println</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token string\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">\"serve1\"</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span>\n    <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">}</span>\n    <span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">funcmain</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">{</span>\n       a <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">:=</span> <span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">A</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>serve<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span>\n       <span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">a</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token number\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 0, 85);\">1</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span><span class=\"token number\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 0, 85);\">2</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span><span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">//这行输出的结果是serve1</span>\n       a<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">Serve</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span><span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">//这行输出的结果是serve2</span>\n    <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">}</span></code></pre><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">上面结果是serve1，serve2</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">Golang的源码里用了很多HandleFunc这个适配器。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">接下来我们看第二个，ServeMux结构，最终我们是绑定它，也是通过它来解析。</p><pre class=\" language-go\" style=\"margin-top: 0.5em; margin-bottom: 0.5em; padding: 0.5em; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; line-height: 1.5; width: 597.797px; overflow: auto; clear: none; text-shadow: white 0px 1px; direction: ltr; word-spacing: normal; word-break: normal; word-wrap: normal; tab-size: 4; z-index: 1000; position: relative; background-color: rgb(245, 242, 240); float: none !important; background-position: initial initial; background-repeat: initial initial;\"><code class=\" language-go\" style=\"text-shadow: white 0px 1px; font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; direction: ltr; word-spacing: normal; word-wrap: normal; line-height: 1.5; tab-size: 4; z-index: 1000;\"><span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">type</span> ServeMuxstruct<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">{</span>\n       mu    sync<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span>RWMutex<span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">//读写锁</span>\n       m     <span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">map</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">[</span><span class=\"token builtin\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">string</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">]</span>muxEntry<span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">//路由map，pattern-&gt;HandleFunc</span>\n       hosts <span class=\"token builtin\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">bool</span><span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">//是否包含hosts        </span>\n    <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">}</span>\n    \n    <span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">type</span> muxEntrystruct<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">{</span>\n       explicit <span class=\"token builtin\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">bool</span><span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">//是否精确匹配，这个在Golang实现里是ture</span>\n       h        Handler <span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">//这个路由表达式对应哪个handler</span>\n       pattern  <span class=\"token builtin\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">string</span><span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">//路由</span>\n    <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">}</span></code></pre><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">看到explicit的时候是不是就明白为啥handle/res不能用handle来监听了？原来如此。大致绑定流程大家看明白了吗？如果不理解可以回去再看一遍。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">接下来我们来看实现“启动/监听/触发”服务器的代码。</p><pre class=\" language-go\" style=\"margin-top: 0.5em; margin-bottom: 0.5em; padding: 0.5em; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; line-height: 1.5; width: 597.797px; overflow: auto; clear: none; text-shadow: white 0px 1px; direction: ltr; word-spacing: normal; word-break: normal; word-wrap: normal; tab-size: 4; z-index: 1000; position: relative; background-color: rgb(245, 242, 240); float: none !important; background-position: initial initial; background-repeat: initial initial;\"><code class=\" language-go\" style=\"text-shadow: white 0px 1px; font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; direction: ltr; word-spacing: normal; word-wrap: normal; line-height: 1.5; tab-size: 4; z-index: 1000;\">http<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">ListenAndServe</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token string\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">\":8081\"</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span> <span class=\"token boolean\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 0, 85);\">nil</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">;</span></code></pre><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">上面这句就是，”:8081”是监听的端口，也是socket监听的端口，第二个参数就是我们的Handler，这里我们写nil。</p><pre class=\" language-go\" style=\"margin-top: 0.5em; margin-bottom: 0.5em; padding: 0.5em; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; line-height: 1.5; width: 597.797px; overflow: auto; clear: none; text-shadow: white 0px 1px; direction: ltr; word-spacing: normal; word-break: normal; word-wrap: normal; tab-size: 4; z-index: 1000; position: relative; background-color: rgb(245, 242, 240); float: none !important; background-position: initial initial; background-repeat: initial initial;\"><code class=\" language-go\" style=\"text-shadow: white 0px 1px; font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; direction: ltr; word-spacing: normal; word-wrap: normal; line-height: 1.5; tab-size: 4; z-index: 1000;\"> <span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">funcListenAndServe</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>addr <span class=\"token builtin\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">string</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span> handler Handler<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> <span class=\"token builtin\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">error</span> <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">{</span>\n       server <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">:=</span> <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">&amp;</span>Server<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">{</span>Addr<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">:</span> addr<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span> Handler<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">:</span> handler<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">}</span>\n       <span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">return</span> server<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">ListenAndServe</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span>\n    <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">}</span></code></pre><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">从这个代码看出来，Server这个结构很重要。我们来看看他是什么。</p><pre class=\" language-go\" style=\"margin-top: 0.5em; margin-bottom: 0.5em; padding: 0.5em; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; line-height: 1.5; width: 597.797px; overflow: auto; clear: none; text-shadow: white 0px 1px; direction: ltr; word-spacing: normal; word-break: normal; word-wrap: normal; tab-size: 4; z-index: 1000; position: relative; background-color: rgb(245, 242, 240); float: none !important; background-position: initial initial; background-repeat: initial initial;\"><code class=\" language-go\" style=\"text-shadow: white 0px 1px; font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; direction: ltr; word-spacing: normal; word-wrap: normal; line-height: 1.5; tab-size: 4; z-index: 1000;\"><span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">type</span> Server <span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">struct</span> <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">{</span>\n    Addr           <span class=\"token builtin\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">string</span>        <span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">// 监听的地址和端口</span>\n    Handler        Handler       <span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">// 所有请求需要调用的Handler（</span>\n    ReadTimeouttime<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span>Duration <span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">// 读的最大Timeout时间</span>\n    WriteTimeouttime<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span>Duration <span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">// 写的最大Timeout时间</span>\n    MaxHeaderBytesint           <span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">// 请求头的最大长度</span>\n    TLSConfig      <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">*</span>tls<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span>Config   <span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">// 配置TLS</span>\n        <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">...</span>   <span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">//结构太长我省略些，感兴趣大家自己看下</span>\n    <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">}</span></code></pre><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">Server提供的方法有：</p><pre class=\" language-go\" style=\"margin-top: 0.5em; margin-bottom: 0.5em; padding: 0.5em; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; line-height: 1.5; width: 597.797px; overflow: auto; clear: none; text-shadow: white 0px 1px; direction: ltr; word-spacing: normal; word-break: normal; word-wrap: normal; tab-size: 4; z-index: 1000; position: relative; background-color: rgb(245, 242, 240); float: none !important; background-position: initial initial; background-repeat: initial initial;\"><code class=\" language-go\" style=\"text-shadow: white 0px 1px; font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; direction: ltr; word-spacing: normal; word-wrap: normal; line-height: 1.5; tab-size: 4; z-index: 1000;\"> <span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">func</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>srv <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">*</span>Server<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> <span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">Serve</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>l net<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span>Listener<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> <span class=\"token builtin\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">error</span>   <span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">//对某个端口进行监听，里面就是调用for进行accept的处理了</span>\n <span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">func</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>srv <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">*</span>Server<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> <span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">ListenAndServe</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> <span class=\"token builtin\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">error</span>  <span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">//开启http server服务</span>\n <span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">func</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>srv <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">*</span>Server<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> <span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">ListenAndServeTLS</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>certFile<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span> keyFile <span class=\"token builtin\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">string</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> <span class=\"token builtin\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">error</span> <span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">//开启https server服务</span></code></pre><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">Server的ListenAndServe方法通过TCP的方式监听端口，然后调用Serve里的实现等待client来accept，然后开启一个协程来处理逻辑(go c.serve)。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">它的格式</p><pre class=\" language-go\" style=\"margin-top: 0.5em; margin-bottom: 0.5em; padding: 0.5em; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; line-height: 1.5; width: 597.797px; overflow: auto; clear: none; text-shadow: white 0px 1px; direction: ltr; word-spacing: normal; word-break: normal; word-wrap: normal; tab-size: 4; z-index: 1000; position: relative; background-color: rgb(245, 242, 240); float: none !important; background-position: initial initial; background-repeat: initial initial;\"><code class=\" language-go\" style=\"text-shadow: white 0px 1px; font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; direction: ltr; word-spacing: normal; word-wrap: normal; line-height: 1.5; tab-size: 4; z-index: 1000;\"><span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">func</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>srv <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">*</span>Server<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> <span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">ListenAndServe</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> <span class=\"token builtin\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">error</span> </code></pre><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">看到这里我们要了解几个重要的概念。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">ResponseWriter：生成Response的接口</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">Handler：处理请求和生成返回的接口</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">ServeMux：路由，后面会说到ServeMux也是一种Handler</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">Conn : 网络连接</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">这几个概念看完之后我们下面要用。</p><pre style=\"margin-top: 10px; margin-bottom: 10px; padding: 10px 10px 10px 5px; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', monospace; color: rgb(49, 78, 100); line-height: 21px; width: 597.797px; overflow: auto; clear: none; background-color: rgb(245, 242, 240); float: none !important; background-position: -29px 0px;\">type conn struct</pre><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">这个结构是一个网络间接。我们暂时忽略。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">这个c.serve里稍微有点复杂，它有关闭这次请求，读取数据的，刷新缓冲区的等实现。这里我们主要关注一个c.readRequest()，通过redRequest可以得到Response，就是输出给客户端数据的一个回复者。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">它里面包含request。如果要看懂这里的实现就要搞懂三个接口。</p><pre class=\" language-go\" style=\"margin-top: 0.5em; margin-bottom: 0.5em; padding: 0.5em; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; line-height: 1.5; width: 597.797px; overflow: auto; clear: none; text-shadow: white 0px 1px; direction: ltr; word-spacing: normal; word-break: normal; word-wrap: normal; tab-size: 4; z-index: 1000; position: relative; background-color: rgb(245, 242, 240); float: none !important; background-position: initial initial; background-repeat: initial initial;\"><code class=\" language-go\" style=\"text-shadow: white 0px 1px; font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; direction: ltr; word-spacing: normal; word-wrap: normal; line-height: 1.5; tab-size: 4; z-index: 1000;\">ResponseWriter<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span> Flusher<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span> Hijacker\n\n    <span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">// ResponseWriter的作用是被Handler调用来组装返回的Response的</span>\n    <span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">type</span> ResponseWriter <span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">interface</span> <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">{</span>\n        <span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">// 这个方法返回Response返回的Header供读写</span>\n        <span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">Header</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> Header\n    \n        <span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">// 这个方法写Response的Body</span>\n        <span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">Write</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">[</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">]</span><span class=\"token builtin\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">byte</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token builtin\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">int</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span> <span class=\"token builtin\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">error</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span>\n    \n        <span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">// 这个方法根据HTTP State Code来写Response的Header</span>\n    \n        <span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">WriteHeader</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token builtin\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">int</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span>\n    <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">}</span>\n    \n    <span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">// Flusher的作用是被Handler调用来将写缓存中的数据推给客户端</span>\n    <span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">type</span> Flusher <span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">interface</span> <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">{</span>\n        <span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">// 刷新缓冲区</span>\n        <span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">Flush</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span>\n    <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">}</span>\n    \n    <span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">// Hijacker的作用是被Handler调用来关闭连接的</span>\n    <span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">type</span> Hijacker <span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">interface</span> <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">{</span>\n        <span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">Hijack</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>net<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span>Conn<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span> <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">*</span>bufio<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span>ReadWriter<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span> <span class=\"token builtin\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">error</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span>\n    \n    <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">}</span></code></pre><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">而我们这里的w也就是ResponseWriter了。而调用了下面这句方法，就可以利用它的Write方法输出内容给客户端了。</p><pre class=\" language-go\" style=\"margin-top: 0.5em; margin-bottom: 0.5em; padding: 0.5em; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; line-height: 1.5; width: 597.797px; overflow: auto; clear: none; text-shadow: white 0px 1px; direction: ltr; word-spacing: normal; word-break: normal; word-wrap: normal; tab-size: 4; z-index: 1000; position: relative; background-color: rgb(245, 242, 240); float: none !important; background-position: initial initial; background-repeat: initial initial;\"><code class=\" language-go\" style=\"text-shadow: white 0px 1px; font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; direction: ltr; word-spacing: normal; word-wrap: normal; line-height: 1.5; tab-size: 4; z-index: 1000;\">serverHandler<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">{</span>c<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span>server<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">}</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">ServeHTTP</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>w<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span> w<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span>req<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span></code></pre><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">这句就是触发路由绑定的方法了。要看这个触发器我们还要知道几个接口。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">具体我们先看下如何实现这三个接口的，因为后面我们要看触发路由执行逻辑片段。实现这三个接口的结构是response</p><pre class=\" language-go\" style=\"margin-top: 0.5em; margin-bottom: 0.5em; padding: 0.5em; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; line-height: 1.5; width: 597.797px; overflow: auto; clear: none; text-shadow: white 0px 1px; direction: ltr; word-spacing: normal; word-break: normal; word-wrap: normal; tab-size: 4; z-index: 1000; position: relative; background-color: rgb(245, 242, 240); float: none !important; background-position: initial initial; background-repeat: initial initial;\"><code class=\" language-go\" style=\"text-shadow: white 0px 1px; font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; direction: ltr; word-spacing: normal; word-wrap: normal; line-height: 1.5; tab-size: 4; z-index: 1000;\">response\n    <span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">// response包含了所有server端的HTTP返回信息</span>\n    <span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">type</span> response <span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">struct</span> <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">{</span>\n        conn          <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">*</span>conn         <span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">// 保存此次HTTP连接的信息</span>\n        req           <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">*</span>Request <span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">// 对应请求信息</span>\n        chunking      <span class=\"token builtin\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">bool</span>     <span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">// 是否使用chunk</span>\n        wroteHeaderbool     <span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">// header是否已经执行过写操作</span>\n        wroteContinuebool     <span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">// 100 Continue response was written</span>\n        header        Header   <span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">// 返回的HTTP的Header</span>\n        written       <span class=\"token builtin\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">int64</span>    <span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">// Body的字节数</span>\n        contentLength <span class=\"token builtin\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">int64</span>    <span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">// Content长度</span>\n        status        <span class=\"token builtin\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">int</span>      <span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">// HTTP状态</span>\n        needSniffbool  \n<span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">//是否需要使用sniff。（当没有设置Content-Type的时候，开启sniff能根据HTTP body来确定Content-Type）</span>\n        closeAfterReplybool    \n<span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">//是否保持长链接。如果客户端发送的请求中connection有keep-alive，这个字段就设置为false。</span>\n        requestBodyLimitHitbool \n<span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">//是否requestBody太大了（当requestBody太大的时候，response是会返回411状态的，并把连接关闭）</span>\n    <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">}</span></code></pre><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">在response中是可以看到</p><pre class=\" language-go\" style=\"margin-top: 0.5em; margin-bottom: 0.5em; padding: 0.5em; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; line-height: 1.5; width: 597.797px; overflow: auto; clear: none; text-shadow: white 0px 1px; direction: ltr; word-spacing: normal; word-break: normal; word-wrap: normal; tab-size: 4; z-index: 1000; position: relative; background-color: rgb(245, 242, 240); float: none !important; background-position: initial initial; background-repeat: initial initial;\"><code class=\" language-go\" style=\"text-shadow: white 0px 1px; font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; direction: ltr; word-spacing: normal; word-wrap: normal; line-height: 1.5; tab-size: 4; z-index: 1000;\"><span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">func</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>w <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">*</span>response<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> <span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">Header</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> Header \n<span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">func</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>w <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">*</span>response<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> <span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">WriteHeader</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>code <span class=\"token builtin\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">int</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> \n<span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">func</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>w <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">*</span>response<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> <span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">Write</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>data <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">[</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">]</span><span class=\"token builtin\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">byte</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>n <span class=\"token builtin\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">int</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span> err <span class=\"token builtin\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">error</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> \n<span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">func</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>w <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">*</span>response<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> <span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">WriteString</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>data <span class=\"token builtin\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">string</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>n <span class=\"token builtin\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">int</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span> err <span class=\"token builtin\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">error</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> \n<span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">// either dataB or dataS is non-zero.</span>\n<span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">func</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>w <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">*</span>response<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> <span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">write</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>lenDataint<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span> dataB <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">[</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">]</span><span class=\"token builtin\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">byte</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span> dataS <span class=\"token builtin\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">string</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>n <span class=\"token builtin\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">int</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span> err <span class=\"token builtin\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">error</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> \n<span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">func</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>w <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">*</span>response<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> <span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">finishRequest</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span>\n<span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">func</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>w <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">*</span>response<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> <span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">Flush</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> \n<span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">func</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>w <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">*</span>response<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> <span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">Hijack</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>rwcnet<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span>Conn<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span> buf <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">*</span>bufio<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span>ReadWriter<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span> err <span class=\"token builtin\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">error</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span></code></pre><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">我简单罗列一些，从上面可以看出，response实现了这3个接口。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">接下来我们请求真正的触发者也就是serverHandle要触发路由(hijacked finishRequest暂且不提)。先看一个接口。</p><pre class=\" language-go\" style=\"margin-top: 0.5em; margin-bottom: 0.5em; padding: 0.5em; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; line-height: 1.5; width: 597.797px; overflow: auto; clear: none; text-shadow: white 0px 1px; direction: ltr; word-spacing: normal; word-break: normal; word-wrap: normal; tab-size: 4; z-index: 1000; position: relative; background-color: rgb(245, 242, 240); float: none !important; background-position: initial initial; background-repeat: initial initial;\"><code class=\" language-go\" style=\"text-shadow: white 0px 1px; font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; direction: ltr; word-spacing: normal; word-wrap: normal; line-height: 1.5; tab-size: 4; z-index: 1000;\">Handler\n    \n    <span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">type</span> Handler <span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">interface</span> <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">{</span>\n    <span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">ServeHTTP</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>ResponseWriter<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span> <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">*</span>Request<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span>  <span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">// 具体的逻辑函数</span>\n    <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">}</span></code></pre><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">实现了handler接口，就意味着往server端添加了处理请求的逻辑函数。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">serverHandle调用ServeHttp来选择触发的HandleFunc。这里面会做一个判断，如果你传递了Handler，就调用你自己的，如果没传递就用DefaultServeMux默认的。到这整体流程就结束了。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">过程是：</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">DefaultServeMux.ServeHttp执行的简单流程.</p><ol style=\"margin: 10px 0px 10px 10px; padding: 0px 0px 0px 20px; border: 0px; width: 549px; clear: left;\"><li style=\"margin: 4px 0px; padding: 0px 0px 0px 10px; border: none; float: none; clear: none; text-align: left;\">h, _ := mux.Handler(r)</li><li style=\"margin: 4px 0px; padding: 0px 0px 0px 10px; border: none; float: none; clear: none; text-align: left;\">h.ServeHTTP(w, r)&nbsp;&nbsp; //执行ServeHttp函数</li></ol><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">查找路由，mux.handler函数里又调用了另外一个函数mux.handler(r.Host, r.URL.Path)。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">还记得我们的ServeMux里的hosts标记吗？这个函数里会进行判断。</p><pre class=\" language-go\" style=\"margin-top: 0.5em; margin-bottom: 0.5em; padding: 0.5em; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; line-height: 1.5; width: 597.797px; overflow: auto; clear: none; text-shadow: white 0px 1px; direction: ltr; word-spacing: normal; word-break: normal; word-wrap: normal; tab-size: 4; z-index: 1000; position: relative; background-color: rgb(245, 242, 240); float: none !important; background-position: initial initial; background-repeat: initial initial;\"><code class=\" language-go\" style=\"text-shadow: white 0px 1px; font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; direction: ltr; word-spacing: normal; word-wrap: normal; line-height: 1.5; tab-size: 4; z-index: 1000;\"><span class=\"token comment\" spellcheck=\"true\" style=\"margin: 0px; border: 0px; padding: 0px; color: slategray;\">// Host-specific pattern takes precedence over generic ones</span>\n       <span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">if</span> mux<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span>hosts <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">{</span>\n          h<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span> pattern <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">=</span> mux<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">match</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>host <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">+</span> path<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span>\n       <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">}</span>\n       <span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">if</span> h <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">==</span> <span class=\"token boolean\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 0, 85);\">nil</span> <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">{</span>\n         h<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span> pattern <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">=</span> mux<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">match</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>path<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span>\n       <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">}</span>\n       <span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">if</span> h <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">==</span> <span class=\"token boolean\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 0, 85);\">nil</span> <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">{</span>\n         h<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span> pattern <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">=</span> <span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">NotFoundHandler</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span> <span class=\"token string\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">\"\"</span>\n       <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">}</span></code></pre><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">上面就是匹配查找pattern和handler的流程了</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">我们来总结一下。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">首先调用Http.HandleFunc</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">按顺序做了几件事：</p><ol style=\"margin: 10px 0px 10px 10px; padding: 0px 0px 0px 20px; border: 0px; width: 549px; clear: left;\"><li style=\"margin: 4px 0px; padding: 0px 0px 0px 10px; border: none; float: none; clear: none; text-align: left;\">调用了DefaultServerMux的HandleFunc</li><li style=\"margin: 4px 0px; padding: 0px 0px 0px 10px; border: none; float: none; clear: none; text-align: left;\">调用了DefaultServerMux的Handle</li><li style=\"margin: 4px 0px; padding: 0px 0px 0px 10px; border: none; float: none; clear: none; text-align: left;\">往DefaultServeMux的map[string]muxEntry中增加对应的handler和路由规则</li></ol><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">别忘记DefaultServerMux是ServeMux的实例。其实都是围绕ServeMux，muxEntry2个结构进行操作绑定。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">其次调用http.ListenAndServe(\":12345\", nil)</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">按顺序做了几件事情：</p><ol style=\"margin: 10px 0px 10px 10px; padding: 0px 0px 0px 20px; border: 0px; width: 549px; clear: left;\"><li style=\"margin: 4px 0px; padding: 0px 0px 0px 10px; border: none; float: none; clear: none; text-align: left;\">实例化Server</li><li style=\"margin: 4px 0px; padding: 0px 0px 0px 10px; border: none; float: none; clear: none; text-align: left;\">调用Server的ListenAndServe()</li><li style=\"margin: 4px 0px; padding: 0px 0px 0px 10px; border: none; float: none; clear: none; text-align: left;\">调用net.Listen(\"tcp\", addr)监听端口，启动for循环，等待accept请求</li><li style=\"margin: 4px 0px; padding: 0px 0px 0px 10px; border: none; float: none; clear: none; text-align: left;\">对每个请求实例化一个Conn，并且开启一个goroutine处理请求。</li><li style=\"margin: 4px 0px; padding: 0px 0px 0px 10px; border: none; float: none; clear: none; text-align: left;\">如：go c.serve()</li><li style=\"margin: 4px 0px; padding: 0px 0px 0px 10px; border: none; float: none; clear: none; text-align: left;\">读取请求的内容w, err := c.readRequest()，也就是response的取值过程。</li><li style=\"margin: 4px 0px; padding: 0px 0px 0px 10px; border: none; float: none; clear: none; text-align: left;\">调用serverHandler的ServeHTTP，ServeHTTP里会判断Server的属性里的header是否为空，如果没有设置handler，handler就设置为DefaultServeMux，反之用自己的(我们后面会做一个利用自己的Handler写服务器)</li><li style=\"margin: 4px 0px; padding: 0px 0px 0px 10px; border: none; float: none; clear: none; text-align: left;\">调用DefaultServeMux的ServeHttp( 因为我们没有自己的Handler，所以走默认的)</li><li style=\"margin: 4px 0px; padding: 0px 0px 0px 10px; border: none; float: none; clear: none; text-align: left;\">通过request选择匹配的handler：<p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; line-height: 1.8; clear: none; width: 539px; float: none !important;\">A request匹配handler的方式。Hosts+pattern或pattern或notFound</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; line-height: 1.8; clear: none; width: 539px; float: none !important;\">B 如果有路由满足，返回这个handler</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; line-height: 1.8; clear: none; width: 539px; float: none !important;\">C 如果没有路由满足，返回NotFoundHandler</p></li><li style=\"margin: 4px 0px; padding: 0px 0px 0px 10px; border: none; float: none; clear: none; text-align: left;\">根据返回的handler进入到这个handler的ServeHTTP</li></ol><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">大概流程就是这个样子，其实在net.Listen(\"tcp\", addr)里也做了很多事，我们下期说道TCP服务器的时候回顾一下他做了哪些。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">通过上面的解释大致明白了我们绑定触发的都是DefaultServeMux的Handler。现在我们来实现一个自己的Handler，这也是做框架的第一步。我们先来敲代码。</p><pre class=\" language-go\" style=\"margin-top: 0.5em; margin-bottom: 0.5em; padding: 0.5em; border: 1px solid rgb(232, 232, 232); font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; line-height: 1.5; width: 597.797px; overflow: auto; clear: none; text-shadow: white 0px 1px; direction: ltr; word-spacing: normal; word-break: normal; word-wrap: normal; tab-size: 4; z-index: 1000; position: relative; background-color: rgb(245, 242, 240); float: none !important; background-position: initial initial; background-repeat: initial initial;\"><code class=\" language-go\" style=\"text-shadow: white 0px 1px; font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; direction: ltr; word-spacing: normal; word-wrap: normal; line-height: 1.5; tab-size: 4; z-index: 1000;\"><span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">package</span> main<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">;</span>\n    \n    <span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">import</span> <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>\n       <span class=\"token string\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">\"fmt\"</span>\n       <span class=\"token string\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">\"net/http\"</span>\n       <span class=\"token string\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">\"time\"</span>\n    <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span>\n    \n    <span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">type</span> customHandlerstruct<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">{</span>\n    \n    <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">}</span>\n    \n    <span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">func</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span>cb <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">*</span>customHandler<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> <span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">ServeHTTP</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span> w http<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span>ResponseWriter<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span> r <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">*</span>http<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span>Request <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">{</span>\n        fmt<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">Println</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token string\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">\"customHandler!!\"</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">;</span>\n        w<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">Write</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">[</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">]</span><span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">byte</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token string\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">\"customHandler!!\"</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">;</span>\n    <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">}</span>\n    \n    <span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">funcmain</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span> <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">{</span>\n        varserver <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">*</span>http<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span>Server <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">=</span> <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">&amp;</span>http<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span>Server<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">{</span>\n          Addr<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">:</span>           <span class=\"token string\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(102, 153, 0);\">\":8080\"</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span>\n          Handler<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">:</span>        <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">&amp;</span>customHandler<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">{</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">}</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span>\n          ReadTimeout<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">:</span>    <span class=\"token number\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 0, 85);\">10</span> <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">*</span> time<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span>Second<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span>\n          WriteTimeout<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">:</span>   <span class=\"token number\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 0, 85);\">10</span> <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">*</span> time<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span>Second<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span>\n          MaxHeaderBytes<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">:</span> <span class=\"token number\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 0, 85);\">1</span> <span class=\"token operator\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.498039);\">&lt;&lt;</span><span class=\"token number\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 0, 85);\">20</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">,</span>\n       <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">}</span>\n    server<span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(221, 74, 104);\">ListenAndServe</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">(</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">;</span>\n    <span class=\"token keyword\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(0, 119, 170);\">select</span> <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">{</span>\n       <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">}</span>\n    <span class=\"token punctuation\" style=\"margin: 0px; border: 0px; padding: 0px; color: rgb(153, 153, 153);\">}</span></code></pre><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\"><img _href=\"img://null\" _p=\"true\" src=\"quiver-image-url/AEE093F75C6F01859CF284666B79C2C5.png\" width=\"550\" style=\"border: 0px; margin: 0px 10px 10px 0px; padding: 0px;\"></p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">是不是很酷，我们可以利用自己的handler做一个智能的路由出来。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">不过还是建议使用国内Golang语言框架<a href=\"https://github.com/astaxie/beego\" style=\"text-decoration: none; color: rgb(40, 106, 178); outline: none !important; margin: 0px; border: 0px; padding: 0px;\">beego</a>，已开源。一款非常不错的框架，谢大维护的很用心，绝对良心框架，而且文档支持，社区也很不错。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">最后附上一张最早设计框架时候的一个流程图(3年前)。大家可以简单看看，当然也可以尝试的动动手。起码收获很多。</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\">(点击放大图像)</p><p style=\"margin: 0px 0px 15px; padding: 0px; border: 0px; float: none; line-height: 1.8; clear: none; width: 610px;\"><a href=\"http://cdn2.infoqstatic.com/statics_s1_20160823-0357/resource/articles/golang-standard-library-part02/zh/resources/006.png\" style=\"text-decoration: none; color: rgb(40, 106, 178); outline: none !important; margin: 0px; border: 0px; padding: 0px;\"><img _href=\"img://null\" _p=\"true\" src=\"quiver-image-url/2E3F92F09C5F110E2807B79039A37412.png\" width=\"550\" style=\"border: 0px; margin: 0px 10px 10px 0px; padding: 0px;\"></a></p></div></div>"
    }
  ]
}